{
    "sourceFile": "accounts/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1725254866294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1725254866294,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom django.db import models\nfrom .utilities.model_utils import LowercaseEmailField\nfrom django.contrib.auth.models import AbstractUser\nfrom .roles import roles_data,roles_data_dict\nfrom .import roles\nimport uuid\nfrom django.db.models import Sum\nfrom .utilities.validators import validate_emails, validate_mobile_number\nfrom django.utils.translation import gettext_lazy as _\n\nclass CustomUser(AbstractUser):\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n    phone = models.CharField(max_length=15,null=True , default = '')\n    email = LowercaseEmailField(\n            _(\"email address\"),\n            unique=True,\n            validators=[validate_emails],\n            error_messages={\"unique\": \"Given Email has already been registered.\"},\n            null=True,\n            blank=True,\n        )\n    username = models.CharField(max_length=255,unique=True)  \n\n    last_name = models.CharField(max_length=255,null = True,default = '')  \n    dob = models.DateField(null= True,blank= True ) \n\n    is_active = models.BooleanField(default=True)\n    remarks = models.CharField(max_length=200,null=True,default = '')\n\n    is_verified = models.BooleanField(default=False)\n\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n \n    image = models.ImageField(upload_to=\"profiles/images\",default=None,null=True,blank=True)\n    role = models.PositiveSmallIntegerField(choices=roles_data, blank=True, null=True,default = 5)\n\n    system_provider = 1\n    google_provider = 2\n    facebook_provider = 3\n\n    old_password_change_case = models.BooleanField(default=True) \n\n    provider_CHOICES = (\n        (system_provider, 'system'),\n        (google_provider, 'google'),\n        (facebook_provider, 'facebook'), \n        (4, 'apple'), \n\n    )\n    provider = models.PositiveSmallIntegerField(choices=provider_CHOICES,default = system_provider)\n\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['username']\n\n    def getRoleName(self):\n        if self.role==roles.SUPER_ADMIN:\n            return roles_data_dict[roles.SUPER_ADMIN]\n        elif self.role == roles.ADMIN:\n            return roles_data_dict[roles.ADMIN]\n        elif self.role == roles.USER:\n            return roles_data_dict[roles.USER]\n        else:\n            return None\n        \n    def __str__(self):\n        return self.username + \" \"+ str(self.getRoleName())\n    \n    @property\n    def full_name(self):\n        try:\n            return self.first_name + \" \" + self.last_name\n        except:\n            return self.username\n    "
        }
    ]
}