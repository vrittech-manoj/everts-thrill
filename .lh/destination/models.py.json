{
    "sourceFile": "destination/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1724909550360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724909591806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=450)\n+    destination_title = models.CharField(max_length=45)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type= models.CharField(max_length=3, default='NPR')  \n     is_price = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1724909597138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=45)\n+    destination_title = models.CharField(max_length=70)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type= models.CharField(max_length=3, default='NPR')  \n     is_price = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1724909613223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     gear_and_equipment = models.TextField(null=True, default='', blank=True)\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n     duration = models.PositiveIntegerField()\n-    trip_grade = models.CharField(max_length=450)\n+    trip_grade = models.CharField(max_length=150)\n     best_season = models.CharField(max_length=3000, null=True, blank=True)\n     max_altitude = models.CharField(max_length=450)\n     meals = models.CharField(max_length=5000)\n     nature_of_trip = models.CharField(max_length=450)\n"
                },
                {
                    "date": 1724909620686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,10 @@\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n     duration = models.PositiveIntegerField()\n     trip_grade = models.CharField(max_length=150)\n-    best_season = models.CharField(max_length=3000, null=True, blank=True)\n-    max_altitude = models.CharField(max_length=450)\n+    best_season = models.CharField(max_length=150, null=True, blank=True)\n+    max_altitude = models.CharField(max_length=150)\n     meals = models.CharField(max_length=5000)\n     nature_of_trip = models.CharField(max_length=450)\n     accommodation = models.CharField(max_length=450)\n     group_size = models.PositiveIntegerField()\n"
                },
                {
                    "date": 1724909625998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n     duration = models.PositiveIntegerField()\n     trip_grade = models.CharField(max_length=150)\n     best_season = models.CharField(max_length=150, null=True, blank=True)\n     max_altitude = models.CharField(max_length=150)\n-    meals = models.CharField(max_length=5000)\n-    nature_of_trip = models.CharField(max_length=450)\n+    meals = models.CharField(max_length=150)\n+    nature_of_trip = models.CharField(max_length=150)\n     accommodation = models.CharField(max_length=450)\n     group_size = models.PositiveIntegerField()\n     \n     # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n"
                },
                {
                    "date": 1724910473051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,10 @@\n     best_season = models.CharField(max_length=150, null=True, blank=True)\n     max_altitude = models.CharField(max_length=150)\n     meals = models.CharField(max_length=150)\n     nature_of_trip = models.CharField(max_length=150)\n-    accommodation = models.CharField(max_length=450)\n-    group_size = models.PositiveIntegerField()\n+    accommodation = models.CharField(max_length=150)\n+    group_size = models.CharField(max_length=70)\n     \n     # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n \n     # activities = models.ManyToManyField(Activity)\n"
                }
            ],
            "date": 1724909550360,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom accounts.models import CustomUser\nimport uuid\nfrom django.utils.text import slugify\nfrom django.core.validators import MaxValueValidator\nfrom activities.models import Activity\nfrom collection.models import Collection\nfrom faqs.models import Faqs\nfrom departure.models import Departure\n\nclass Package(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n    slug = models.SlugField(unique=True, blank=True)\n    name = models.CharField(max_length=400, unique=True)\n    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n\n    def __str__(self):\n        return self.name\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n        super().save(*args, **kwargs)\n\n\nclass Destination(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n    slug = models.SlugField(unique=True, blank=True)\n    destination_title = models.CharField(max_length=450)\n    packages = models.ManyToManyField(Package)\n    price = models.FloatField(null=True, blank=True)\n    price_type= models.CharField(max_length=3, default='NPR')  \n    is_price = models.BooleanField(default=False)\n    featured_image = models.ImageField(upload_to=\"destination/featured/images/\",null = True,blank = True)\n    overview = models.CharField(max_length=5000, null=True, blank=True)\n    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n    ltinerary = models.TextField()\n    trip_map_url = models.URLField(null=True, blank=True)\n    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\",null = True,blank = True)\n    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n    useful_information = models.TextField(null=True, default='', blank=True)\n    \n    duration = models.PositiveIntegerField()\n    trip_grade = models.CharField(max_length=450)\n    best_season = models.CharField(max_length=3000, null=True, blank=True)\n    max_altitude = models.CharField(max_length=450)\n    meals = models.CharField(max_length=5000)\n    nature_of_trip = models.CharField(max_length=450)\n    accommodation = models.CharField(max_length=450)\n    group_size = models.PositiveIntegerField()\n    \n    # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n\n    # activities = models.ManyToManyField(Activity)\n    # collection = models.ManyToManyField(Collection)\n\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n\n    def __str__(self):\n        return self.destination_title\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n        super().save(*args, **kwargs)\n\n\nclass DestinationGalleryImages(models.Model):\n    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n\n\nclass DestinationReview(models.Model):\n    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n    comments = models.CharField(max_length=2000)\n    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n\n    def __str__(self) -> str:\n        return str(self.user.username) + ':' + '*' * self.stars\n\n"
        }
    ]
}