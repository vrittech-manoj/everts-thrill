{
    "sourceFile": "destination/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 34,
            "patches": [
                {
                    "date": 1724909550360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724909591806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=450)\n+    destination_title = models.CharField(max_length=45)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type= models.CharField(max_length=3, default='NPR')  \n     is_price = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1724909597138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=45)\n+    destination_title = models.CharField(max_length=70)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type= models.CharField(max_length=3, default='NPR')  \n     is_price = models.BooleanField(default=False)\n"
                },
                {
                    "date": 1724909613223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     gear_and_equipment = models.TextField(null=True, default='', blank=True)\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n     duration = models.PositiveIntegerField()\n-    trip_grade = models.CharField(max_length=450)\n+    trip_grade = models.CharField(max_length=150)\n     best_season = models.CharField(max_length=3000, null=True, blank=True)\n     max_altitude = models.CharField(max_length=450)\n     meals = models.CharField(max_length=5000)\n     nature_of_trip = models.CharField(max_length=450)\n"
                },
                {
                    "date": 1724909620686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,10 +41,10 @@\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n     duration = models.PositiveIntegerField()\n     trip_grade = models.CharField(max_length=150)\n-    best_season = models.CharField(max_length=3000, null=True, blank=True)\n-    max_altitude = models.CharField(max_length=450)\n+    best_season = models.CharField(max_length=150, null=True, blank=True)\n+    max_altitude = models.CharField(max_length=150)\n     meals = models.CharField(max_length=5000)\n     nature_of_trip = models.CharField(max_length=450)\n     accommodation = models.CharField(max_length=450)\n     group_size = models.PositiveIntegerField()\n"
                },
                {
                    "date": 1724909625998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n     duration = models.PositiveIntegerField()\n     trip_grade = models.CharField(max_length=150)\n     best_season = models.CharField(max_length=150, null=True, blank=True)\n     max_altitude = models.CharField(max_length=150)\n-    meals = models.CharField(max_length=5000)\n-    nature_of_trip = models.CharField(max_length=450)\n+    meals = models.CharField(max_length=150)\n+    nature_of_trip = models.CharField(max_length=150)\n     accommodation = models.CharField(max_length=450)\n     group_size = models.PositiveIntegerField()\n     \n     # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n"
                },
                {
                    "date": 1724910473051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,10 @@\n     best_season = models.CharField(max_length=150, null=True, blank=True)\n     max_altitude = models.CharField(max_length=150)\n     meals = models.CharField(max_length=150)\n     nature_of_trip = models.CharField(max_length=150)\n-    accommodation = models.CharField(max_length=450)\n-    group_size = models.PositiveIntegerField()\n+    accommodation = models.CharField(max_length=150)\n+    group_size = models.CharField(max_length=70)\n     \n     # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n \n     # activities = models.ManyToManyField(Activity)\n"
                },
                {
                    "date": 1724912030414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,18 @@\n from collection.models import Collection\n from faqs.models import Faqs\n from departure.models import Departure\n \n+from django.db import models\n+from accounts.models import CustomUser\n+import uuid\n+from django.utils.text import slugify\n+from django.core.validators import MaxValueValidator\n+from activities.models import Activity\n+from collection.models import Collection\n+from faqs.models import Faqs\n+from departure.models import Departure\n+\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n@@ -28,16 +38,16 @@\n     slug = models.SlugField(unique=True, blank=True)\n     destination_title = models.CharField(max_length=70)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n-    price_type= models.CharField(max_length=3, default='NPR')  \n+    price_type = models.CharField(max_length=3, default='NPR')  \n     is_price = models.BooleanField(default=False)\n-    featured_image = models.ImageField(upload_to=\"destination/featured/images/\",null = True,blank = True)\n+    featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n     overview = models.CharField(max_length=5000, null=True, blank=True)\n     inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n     ltinerary = models.TextField()\n     trip_map_url = models.URLField(null=True, blank=True)\n-    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\",null = True,blank = True)\n+    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n     gear_and_equipment = models.TextField(null=True, default='', blank=True)\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n     duration = models.PositiveIntegerField()\n@@ -48,13 +58,13 @@\n     nature_of_trip = models.CharField(max_length=150)\n     accommodation = models.CharField(max_length=150)\n     group_size = models.CharField(max_length=70)\n     \n-    # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n+    # SEO fields (auto-generated)\n+    meta_title = models.CharField(max_length=150, null=True, blank=True, editable=False)\n+    meta_description = models.CharField(max_length=255, null=True, blank=True, editable=False)\n+    meta_keywords = models.CharField(max_length=255, null=True, blank=True, editable=False)\n \n-    # activities = models.ManyToManyField(Activity)\n-    # collection = models.ManyToManyField(Collection)\n-\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self):\n@@ -62,8 +72,20 @@\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+\n+        # Auto-generate meta fields\n+        if not self.meta_title:\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+\n+        if not self.meta_description:\n+            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+\n+        if not self.meta_keywords:\n+            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n+            self.meta_keywords = \", \".join(keywords)\n+\n         super().save(*args, **kwargs)\n \n \n class DestinationGalleryImages(models.Model):\n"
                },
                {
                    "date": 1724912038536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,8 @@\n from collection.models import Collection\n from faqs.models import Faqs\n from departure.models import Departure\n \n-from django.db import models\n-from accounts.models import CustomUser\n-import uuid\n-from django.utils.text import slugify\n-from django.core.validators import MaxValueValidator\n-from activities.models import Activity\n-from collection.models import Collection\n-from faqs.models import Faqs\n-from departure.models import Departure\n-\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n"
                },
                {
                    "date": 1724912791845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,12 @@\n     nature_of_trip = models.CharField(max_length=150)\n     accommodation = models.CharField(max_length=150)\n     group_size = models.CharField(max_length=70)\n     \n-    # SEO fields (auto-generated)\n-    meta_title = models.CharField(max_length=150, null=True, blank=True, editable=False)\n-    meta_description = models.CharField(max_length=255, null=True, blank=True, editable=False)\n-    meta_keywords = models.CharField(max_length=255, null=True, blank=True, editable=False)\n+    # SEO fields (can be user-defined or auto-generated)\n+    meta_title = models.CharField(max_length=150, null=True, blank=True)\n+    meta_description = models.CharField(max_length=255, null=True, blank=True)\n+    meta_keywords = models.CharField(max_length=255, null=True, blank=True)\n \n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n@@ -63,9 +63,9 @@\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n \n-        # Auto-generate meta fields\n+        # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n             self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n \n         if not self.meta_description:\n@@ -76,9 +76,8 @@\n             self.meta_keywords = \", \".join(keywords)\n \n         super().save(*args, **kwargs)\n \n-\n class DestinationGalleryImages(models.Model):\n     destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n     image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n \n"
                },
                {
                    "date": 1725170697529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+from django.db import models\n+from accounts.models import CustomUser\n+import uuid\n+from django.utils.text import slugify\n+from django.core.validators import MaxValueValidator\n+from activities.models import Activity\n+from collection.models import Collection\n+from faqs.models import Faqs\n+from departure.models import Departure\n+\n+class Package(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    name = models.CharField(max_length=400, unique=True)\n+    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        super().save(*args, **kwargs)\n+\n+\n+ion_title\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+\n+        # Auto-generate meta fields if not provided by user\n+        if not self.meta_title:\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+\n+        if not self.meta_description:\n+            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+\n+        if not self.meta_keywords:\n+            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n+            self.meta_keywords = \", \".join(keywords)\n+\n+        super().save(*args, **kwargs)\n+\n+class DestinationGalleryImages(models.Model):\n+    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n+    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n+\n+\n+class DestinationReview(models.Model):\n+    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n+    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n+    comments = models.CharField(max_length=2000)\n+    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n+\n+    def __str__(self) -> str:\n+        return str(self.user.username) + ':' + '*' * self.stars\n+\n"
                },
                {
                    "date": 1725340227030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,73 +22,15 @@\n             self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n         super().save(*args, **kwargs)\n \n \n-ion_title\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-\n-        # Auto-generate meta fields if not provided by user\n-        if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n-\n-        if not self.meta_description:\n-            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n-\n-        if not self.meta_keywords:\n-            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n-            self.meta_keywords = \", \".join(keywords)\n-\n-        super().save(*args, **kwargs)\n-\n-class DestinationGalleryImages(models.Model):\n-    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n-    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n-\n-\n-class DestinationReview(models.Model):\n-    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n-    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n-    comments = models.CharField(max_length=2000)\n-    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n-\n-    def __str__(self) -> str:\n-        return str(self.user.username) + ':' + '*' * self.stars\n-\n-from django.db import models\n-from accounts.models import CustomUser\n-import uuid\n-from django.utils.text import slugify\n-from django.core.validators import MaxValueValidator\n-from activities.models import Activity\n-from collection.models import Collection\n-from faqs.models import Faqs\n-from departure.models import Departure\n-\n-class Package(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    name = models.CharField(max_length=400, unique=True)\n-    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n-\n-    def __str__(self):\n-        return self.name\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-        super().save(*args, **kwargs)\n-\n-\n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     destination_title = models.CharField(max_length=70)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n-    price_type = models.CharField(max_length=3, default='NPR')  \n+    price_type = models.CharField(max_length=3, default='USD')  \n     is_price = models.BooleanField(default=False)\n     featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n     overview = models.CharField(max_length=5000, null=True, blank=True)\n     inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n"
                },
                {
                    "date": 1725342013113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         return self.name\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n         super().save(*args, **kwargs)\n \n \n class Destination(models.Model):\n"
                },
                {
                    "date": 1725342020632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n         return self.destination_title\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = f'{slugify(self.destination_title)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n             self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n"
                },
                {
                    "date": 1725342027605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+from django.db import models\n+from accounts.models import CustomUser\n+import uuid\n+from django.utils.text import slugify\n+from django.core.validators import MaxValueValidator\n+from activities.models import Activity\n+from collection.models import Collection\n+from faqs.models import Faqs\n+from departure.models import Departure\n+\n+class Package(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    name = models.CharField(max_length=400, unique=True)\n+    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+        super().save(*args, **kwargs)\n+\n+\n+class Destination(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    destination_title = models.CharField(max_length=70)\n+    packages = models.ManyToManyField(Package)\n+    price = models.FloatField(null=True, blank=True)\n+    price_type = models.CharField(max_length=3, default='USD')  \n+    is_price = models.BooleanField(default=False)\n+    featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n+    overview = models.CharField(max_length=5000, null=True, blank=True)\n+    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n+    ltinerary = models.TextField()\n+    trip_map_url = models.URLField(null=True, blank=True)\n+    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n+    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n+    useful_information = models.TextField(null=True, default='', blank=True)\n+    \n+    duration = models.PositiveIntegerField()\n+    trip_grade = models.CharField(max_length=150)\n+    best_season = models.CharField(max_length=150, null=True, blank=True)\n+    max_altitude = models.CharField(max_length=150)\n+    meals = models.CharField(max_length=150)\n+    nature_of_trip = models.CharField(max_length=150)\n+    accommodation = models.CharField(max_length=150)\n+    group_size = models.CharField(max_length=70)\n+    \n+    # SEO fields (can be user-defined or auto-generated)\n+    meta_title = models.CharField(max_length=150, null=True, blank=True)\n+    meta_description = models.CharField(max_length=255, null=True, blank=True)\n+    meta_keywords = models.CharField(max_length=255, null=True, blank=True)\n+\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self):\n+        return self.destination_title\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = f'{slugify(self.destination_title)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+\n+        # Auto-generate meta fields if not provided by user\n+        if not self.meta_title:\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+\n+        if not self.meta_description:\n+            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+\n+        if not self.meta_keywords:\n+            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n+            self.meta_keywords = \", \".join(keywords)\n+\n+        super().save(*args, **kwargs)\n+\n+class DestinationGalleryImages(models.Model):\n+    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n+    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n+\n+\n+class DestinationReview(models.Model):\n+    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n+    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n+    comments = models.CharField(max_length=2000)\n+    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n+\n+    def __str__(self) -> str:\n+        return f'{str(self.user.username)}:' + '*' * self.stars\n+\n"
                },
                {
                    "date": 1725442152357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=70)\n+    destination_title = models.CharField(max_length=70,unique=)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type = models.CharField(max_length=3, default='USD')  \n     is_price = models.BooleanField(default=False)\n@@ -90,97 +90,4 @@\n \n     def __str__(self) -> str:\n         return f'{str(self.user.username)}:' + '*' * self.stars\n \n-from django.db import models\n-from accounts.models import CustomUser\n-import uuid\n-from django.utils.text import slugify\n-from django.core.validators import MaxValueValidator\n-from activities.models import Activity\n-from collection.models import Collection\n-from faqs.models import Faqs\n-from departure.models import Departure\n-\n-class Package(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    name = models.CharField(max_length=400, unique=True)\n-    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n-\n-    def __str__(self):\n-        return self.name\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-        super().save(*args, **kwargs)\n-\n-\n-class Destination(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=70)\n-    packages = models.ManyToManyField(Package)\n-    price = models.FloatField(null=True, blank=True)\n-    price_type = models.CharField(max_length=3, default='USD')  \n-    is_price = models.BooleanField(default=False)\n-    featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n-    overview = models.CharField(max_length=5000, null=True, blank=True)\n-    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n-    ltinerary = models.TextField()\n-    trip_map_url = models.URLField(null=True, blank=True)\n-    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n-    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n-    useful_information = models.TextField(null=True, default='', blank=True)\n-    \n-    duration = models.PositiveIntegerField()\n-    trip_grade = models.CharField(max_length=150)\n-    best_season = models.CharField(max_length=150, null=True, blank=True)\n-    max_altitude = models.CharField(max_length=150)\n-    meals = models.CharField(max_length=150)\n-    nature_of_trip = models.CharField(max_length=150)\n-    accommodation = models.CharField(max_length=150)\n-    group_size = models.CharField(max_length=70)\n-    \n-    # SEO fields (can be user-defined or auto-generated)\n-    meta_title = models.CharField(max_length=150, null=True, blank=True)\n-    meta_description = models.CharField(max_length=255, null=True, blank=True)\n-    meta_keywords = models.CharField(max_length=255, null=True, blank=True)\n-\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self):\n-        return self.destination_title\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = f'{slugify(self.destination_title)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-\n-        # Auto-generate meta fields if not provided by user\n-        if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n-\n-        if not self.meta_description:\n-            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n-\n-        if not self.meta_keywords:\n-            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n-            self.meta_keywords = \", \".join(keywords)\n-\n-        super().save(*args, **kwargs)\n-\n-class DestinationGalleryImages(models.Model):\n-    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n-    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n-\n-\n-class DestinationReview(models.Model):\n-    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n-    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n-    comments = models.CharField(max_length=2000)\n-    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n-\n-    def __str__(self) -> str:\n-        return str(self.user.username) + ':' + '*' * self.stars\n-\n"
                },
                {
                    "date": 1725442184993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n class Destination(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=70,unique=)\n+    destination_title = models.CharField(max_length=70,unique=True)\n     packages = models.ManyToManyField(Package)\n     price = models.FloatField(null=True, blank=True)\n     price_type = models.CharField(max_length=3, default='USD')  \n     is_price = models.BooleanField(default=False)\n@@ -61,9 +61,9 @@\n         return self.destination_title\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = f'{slugify(self.destination_title)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+            self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n             self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n"
                },
                {
                    "date": 1725629475262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     price = models.FloatField(null=True, blank=True)\n     price_type = models.CharField(max_length=3, default='USD')  \n     is_price = models.BooleanField(default=False)\n     featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n-    overview = models.CharField(max_length=5000, null=True, blank=True)\n+    overview = models.CharField( null=True, blank=True)\n     inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n     ltinerary = models.TextField()\n     trip_map_url = models.URLField(null=True, blank=True)\n     trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n"
                },
                {
                    "date": 1725776798824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,9 @@\n from django.core.validators import MaxValueValidator\n from activities.models import Activity\n from collection.models import Collection\n from faqs.models import Faqs\n-from departure.models import Departure\n-\n-class Package(models.Model):\n+from departure.models import Departureclass Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n@@ -31,9 +29,9 @@\n     price = models.FloatField(null=True, blank=True)\n     price_type = models.CharField(max_length=3, default='USD')  \n     is_price = models.BooleanField(default=False)\n     featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n-    overview = models.CharField( null=True, blank=True)\n+    overview = models.CharField(null=True, blank=True)\n     inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n     ltinerary = models.TextField()\n     trip_map_url = models.URLField(null=True, blank=True)\n     trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n"
                },
                {
                    "date": 1725789621735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+from django.db import models\n+from accounts.models import CustomUser\n+import uuid\n+from django.utils.text import slugify\n+from django.core.validators import MaxValueValidator\n+from activities.models import Activity\n+from collection.models import Collection\n+from faqs.models import Faqs\n+from departure.models import Departure\n+class Package(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    name = models.CharField(max_length=400, unique=True)\n+    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+        super().save(*args, **kwargs)\n+\n+\n+class Destination(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    destination_title = models.CharField(max_length=70,unique=True)\n+    packages = models.ManyToManyField(Package)\n+    price = models.FloatField(null=True, blank=True)\n+    price_type = models.CharField(max_length=3, default='USD')  \n+    is_price = models.BooleanField(default=False)\n+    featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n+    overview = models.CharField(null=True, blank=True)\n+    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n+    ltinerary = models.TextField()\n+    trip_map_url = models.URLField(null=True, blank=True)\n+    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n+    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n+    useful_information = models.TextField(null=True, default='', blank=True)\n+    \n+    duration = models.PositiveIntegerField()\n+    trip_grade = models.CharField(max_length=150)\n+    best_season = models.CharField(max_length=150, null=True, blank=True)\n+    max_altitude = models.CharField(max_length=150)\n+    meals = models.CharField(max_length=150)\n+    nature_of_trip = models.CharField(max_length=150)\n+    accommodation = models.CharField(max_length=150)\n+    group_size = models.CharField(max_length=70)\n+    \n+    # SEO fields (can be user-defined or auto-generated)\n+    meta_title = models.CharField(max_length=150, null=True, blank=True)\n+    meta_description = models.CharField(max_length=255, null=True, blank=True)\n+    meta_keywords = models.CharField(max_length=255, null=True, blank=True)\n+\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self):\n+        return self.destination_title\n+\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = f'{slugify(self.destination_title)}'\n+\n+        # Auto-generate meta fields if not provided by user\n+        if not self.meta_title:\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+\n+        if not self.meta_description:\n+            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+\n+        if not self.meta_keywords:\n+            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n+            self.meta_keywords = \", \".join(keywords)\n+\n+        super().save(*args, **kwargs)\n+\n+class DestinationGalleryImages(models.Model):\n+    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n+    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n+\n+\n+class DestinationReview(models.Model):\n+    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n+    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n+    comments = models.CharField(max_length=2000)\n+    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n+\n+    def __str__(self) -> str:\n+        return f'{str(self.user.username)}:' + '*' * self.stars\n+\n"
                },
                {
                    "date": 1725942322958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n     gear_and_equipment = models.TextField(null=True, default='', blank=True)\n     useful_information = models.TextField(null=True, default='', blank=True)\n     \n-    duration = models.PositiveIntegerField()\n+    duration = models.CharField(null=True, blank=True)\n     trip_grade = models.CharField(max_length=150)\n     best_season = models.CharField(max_length=150, null=True, blank=True)\n     max_altitude = models.CharField(max_length=150)\n     meals = models.CharField(max_length=150)\n@@ -90,95 +90,4 @@\n \n     def __str__(self) -> str:\n         return f'{str(self.user.username)}:' + '*' * self.stars\n \n-from django.db import models\n-from accounts.models import CustomUser\n-import uuid\n-from django.utils.text import slugify\n-from django.core.validators import MaxValueValidator\n-from activities.models import Activity\n-from collection.models import Collection\n-from faqs.models import Faqs\n-from departure.models import Departureclass Package(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    name = models.CharField(max_length=400, unique=True)\n-    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n-\n-    def __str__(self):\n-        return self.name\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = f'{slugify(self.name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-        super().save(*args, **kwargs)\n-\n-\n-class Destination(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    destination_title = models.CharField(max_length=70,unique=True)\n-    packages = models.ManyToManyField(Package)\n-    price = models.FloatField(null=True, blank=True)\n-    price_type = models.CharField(max_length=3, default='USD')  \n-    is_price = models.BooleanField(default=False)\n-    featured_image = models.ImageField(upload_to=\"destination/featured/images/\", null=True, blank=True)\n-    overview = models.CharField(null=True, blank=True)\n-    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n-    ltinerary = models.TextField()\n-    trip_map_url = models.URLField(null=True, blank=True)\n-    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\", null=True, blank=True)\n-    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n-    useful_information = models.TextField(null=True, default='', blank=True)\n-    \n-    duration = models.PositiveIntegerField()\n-    trip_grade = models.CharField(max_length=150)\n-    best_season = models.CharField(max_length=150, null=True, blank=True)\n-    max_altitude = models.CharField(max_length=150)\n-    meals = models.CharField(max_length=150)\n-    nature_of_trip = models.CharField(max_length=150)\n-    accommodation = models.CharField(max_length=150)\n-    group_size = models.CharField(max_length=70)\n-    \n-    # SEO fields (can be user-defined or auto-generated)\n-    meta_title = models.CharField(max_length=150, null=True, blank=True)\n-    meta_description = models.CharField(max_length=255, null=True, blank=True)\n-    meta_keywords = models.CharField(max_length=255, null=True, blank=True)\n-\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self):\n-        return self.destination_title\n-\n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = f'{slugify(self.destination_title)}'\n-\n-        # Auto-generate meta fields if not provided by user\n-        if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n-\n-        if not self.meta_description:\n-            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n-\n-        if not self.meta_keywords:\n-            keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n-            self.meta_keywords = \", \".join(keywords)\n-\n-        super().save(*args, **kwargs)\n-\n-class DestinationGalleryImages(models.Model):\n-    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n-    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n-\n-\n-class DestinationReview(models.Model):\n-    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n-    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n-    comments = models.CharField(max_length=2000)\n-    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n-\n-    def __str__(self) -> str:\n-        return f'{str(self.user.username)}:' + '*' * self.stars\n-\n"
                },
                {
                    "date": 1726204697755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n+    name = models.CharField(max_length=400, unique=True)\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1726204703036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n-    name = models.CharField(max_length=400, unique=True)\n+    description = models.CharField(max_length=400, unique=True)\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1726204708189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n-    description = models.CharField(max_length=400, unique=True)\n+    description = models.TextField(max_length=400, unique=True)\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1726204714102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n-    description = models.TextField(max_length=400, unique=True)\n+    description = models.TextField(\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1726204722904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n class Package(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     slug = models.SlugField(unique=True, blank=True)\n     name = models.CharField(max_length=400, unique=True)\n-    description = models.TextField(\n+    description = models.TextField(null = True, blank = True)\n     image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n \n     def __str__(self):\n         return self.name\n"
                },
                {
                    "date": 1726325855986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Des\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726325867493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Des\"\n+            self.meta_title = f\"{self.destination_title}\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726325880460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title}\"\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Destinations\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726325888413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Destinations\"\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726373707617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         if not self.meta_title:\n             self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n \n         if not self.meta_description:\n-            self.meta_description = self.overview[:255] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+            self.meta_description = self.overview[:] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n         if not self.meta_keywords:\n             keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n             self.meta_keywords = \", \".join(keywords)\n"
                },
                {
                    "date": 1726373727714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,12 +66,12 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+            self.meta_title = f\"{self.destination_title\"\n \n         if not self.meta_description:\n-            self.meta_description = self.overview[:] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n+            self.meta_description = self.overview[:100] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n         if not self.meta_keywords:\n             keywords = [self.destination_title, \"travel\", \"tour\", \"packages\", \"holidays\", \"trip\"]\n             self.meta_keywords = \", \".join(keywords)\n"
                },
                {
                    "date": 1726373732845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title\"\n+            self.meta_title = self.destination_title\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:100] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726373739702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = self.destination_title\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:100] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                },
                {
                    "date": 1726373749178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             self.slug = f'{slugify(self.destination_title)}'\n \n         # Auto-generate meta fields if not provided by user\n         if not self.meta_title:\n-            self.meta_title = f\"{self.destination_title} - Explore the Best Packages\"\n+            self.meta_title = f\"{self.destination_title} - Explore the Best Destination\"\n \n         if not self.meta_description:\n             self.meta_description = self.overview[:100] if self.overview else f\"Explore the best travel packages for {self.destination_title}. Plan your trip with us.\"\n \n"
                }
            ],
            "date": 1724909550360,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom accounts.models import CustomUser\nimport uuid\nfrom django.utils.text import slugify\nfrom django.core.validators import MaxValueValidator\nfrom activities.models import Activity\nfrom collection.models import Collection\nfrom faqs.models import Faqs\nfrom departure.models import Departure\n\nclass Package(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n    slug = models.SlugField(unique=True, blank=True)\n    name = models.CharField(max_length=400, unique=True)\n    image = models.ImageField(upload_to=\"destination/package_image/\", null=True, blank=True)\n\n    def __str__(self):\n        return self.name\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n        super().save(*args, **kwargs)\n\n\nclass Destination(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n    slug = models.SlugField(unique=True, blank=True)\n    destination_title = models.CharField(max_length=450)\n    packages = models.ManyToManyField(Package)\n    price = models.FloatField(null=True, blank=True)\n    price_type= models.CharField(max_length=3, default='NPR')  \n    is_price = models.BooleanField(default=False)\n    featured_image = models.ImageField(upload_to=\"destination/featured/images/\",null = True,blank = True)\n    overview = models.CharField(max_length=5000, null=True, blank=True)\n    inclusion_and_exclusion = models.TextField(null=True, default='', blank=True)\n    ltinerary = models.TextField()\n    trip_map_url = models.URLField(null=True, blank=True)\n    trip_map_image = models.ImageField(upload_to=\"destination/trip-map/images/\",null = True,blank = True)\n    gear_and_equipment = models.TextField(null=True, default='', blank=True)\n    useful_information = models.TextField(null=True, default='', blank=True)\n    \n    duration = models.PositiveIntegerField()\n    trip_grade = models.CharField(max_length=450)\n    best_season = models.CharField(max_length=3000, null=True, blank=True)\n    max_altitude = models.CharField(max_length=450)\n    meals = models.CharField(max_length=5000)\n    nature_of_trip = models.CharField(max_length=450)\n    accommodation = models.CharField(max_length=450)\n    group_size = models.PositiveIntegerField()\n    \n    # departure =models.ManyToManyField(Departure, related_name=\"destination_departure\")\n\n    # activities = models.ManyToManyField(Activity)\n    # collection = models.ManyToManyField(Collection)\n\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n\n    def __str__(self):\n        return self.destination_title\n\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n        super().save(*args, **kwargs)\n\n\nclass DestinationGalleryImages(models.Model):\n    destination_trip = models.ForeignKey(Destination, related_name=\"galleryimages\", on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"destination/images/\", null=True, blank=True)\n\n\nclass DestinationReview(models.Model):\n    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n    stars = models.PositiveIntegerField(default=1, validators=[MaxValueValidator(5)], help_text=\"Enter a number less than 5 stars\")\n    comments = models.CharField(max_length=2000)\n    destination_trip = models.ForeignKey(Destination, related_name=\"review\", on_delete=models.CASCADE)\n\n    def __str__(self) -> str:\n        return str(self.user.username) + ':' + '*' * self.stars\n\n"
        }
    ]
}