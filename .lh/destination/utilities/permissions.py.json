{
    "sourceFile": "destination/utilities/permissions.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1724760257835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724760264279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     def has_permission(self, request, view):\n         if view.action in [\"list\"]:\n             return True\n         elif view.action in ['retrieve']:\n-            return True\n+            return AdminLevel(request)\n         elif view.action in ['create','update']:\n             return AdminLevel(request) #second level\n             return ObjectBOwner(request) #third level\n         elif view.action == \"partial_update\":\n"
                },
                {
                    "date": 1724760269739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n #     return False\n \n class destinationPermission(BasePermission):\n     def has_permission(self, request, view):\n+        return True\n         if view.action in [\"list\"]:\n             return True\n         elif view.action in ['retrieve']:\n             return AdminLevel(request)\n"
                },
                {
                    "date": 1724822759486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,17 +41,17 @@\n #     return False\n \n class destinationPermission(BasePermission):\n     def has_permission(self, request, view):\n-        return True\n-        if view.action in [\"list\"]:\n-            return True\n-        elif view.action in ['retrieve']:\n-            return AdminLevel(request)\n-        elif view.action in ['create','update']:\n-            return AdminLevel(request) #second level\n-            return ObjectBOwner(request) #third level\n-        elif view.action == \"partial_update\":\n-            return AdminLevel(request)\n-        elif view.action == 'destroy':\n-            return AdminLevel(request)\n+        # return True\n+        # if view.action in [\"list\"]:\n+        #     return True\n+        # elif view.action in ['retrieve']:\n+        #     return AdminLevel(request)\n+        # elif view.action in ['create','update']:\n+        #     return AdminLevel(request) #second level\n+        #     return ObjectBOwner(request) #third level\n+        # elif view.action == \"partial_update\":\n+        #     return AdminLevel(request)\n+        # elif view.action == 'destroy':\n+        #     return AdminLevel(request)\n \n"
                },
                {
                    "date": 1724822793906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,16 @@\n \n class destinationPermission(BasePermission):\n     def has_permission(self, request, view):\n         # return True\n-        # if view.action in [\"list\"]:\n-        #     return True\n-        # elif view.action in ['retrieve']:\n-        #     return AdminLevel(request)\n-        # elif view.action in ['create','update']:\n-        #     return AdminLevel(request) #second level\n-        #     return ObjectBOwner(request) #third level\n-        # elif view.action == \"partial_update\":\n-        #     return AdminLevel(request)\n-        # elif view.action == 'destroy':\n-        #     return AdminLevel(request)\n+        if view.action in [\"list\"]:\n+            return True\n+        elif view.action in ['retrieve']:\n+            return IsAuthenticated(request)\n+        elif view.action in ['create','update']:\n+            return AdminLevel(request) #second level\n+            return ObjectBOwner(request) #third level\n+        elif view.action == \"partial_update\":\n+            return AdminLevel(request)\n+        elif view.action == 'destroy':\n+            return AdminLevel(request)\n \n"
                },
                {
                    "date": 1724831053044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         # return True\n         if view.action in [\"list\"]:\n             return True\n         elif view.action in ['retrieve']:\n-            return IsAuthenticated(request)\n+           return True\n         elif view.action in ['create','update']:\n             return AdminLevel(request) #second level\n             return ObjectBOwner(request) #third level\n         elif view.action == \"partial_update\":\n"
                }
            ],
            "date": 1724760257835,
            "name": "Commit-0",
            "content": "#------permission are classified into three types------->\n#first-level:-Admin,Superadmin,Superuser (this is  user model class which can be considered as ObjectA)\n#second-level:-object 'B' is assigned to user(i.e in object B , ObjectA is assigned), where user called as ObjectA\n#third-level:-object 'C' is assigned to object object B(i.e object B is assigned in object C)\n\n#model ObjectB->user field\n#model ObjectC->objectB field(objectB id)\n\n\n#as example, we can consider as , user,company,job where user is ObjectA,company is ObjectB,job is ObjectC\n\nfrom rest_framework.permissions import BasePermission\n\nSUPER_ADMIN = 1\nADMIN = 2\n\n\ndef IsAuthenticated(request):\n    return bool(request.user and request.user.is_authenticated)\n\ndef SuperAdminLevel(request):\n    return bool(IsAuthenticated(request) and request.user.is_superuser)\n\ndef AdminLevel(request):\n    return bool(IsAuthenticated(request) and request.user.role in [ADMIN,SUPER_ADMIN])\n\ndef isOwner(request):\n    if str(request.user.id) == str(request.data.get('user')):\n        return True\n    \n    elif len(request.data)==0 and len(request.POST)==0:\n        return True\n\n    return False\n\n\n# def ObjectBOwner(request):\n#     company = ObjectB.objects.filter(id = request.data.get('objectb'),user = request.user.id)\n#     if company.exists():\n#         return True\n#     return False\n\nclass destinationPermission(BasePermission):\n    def has_permission(self, request, view):\n        if view.action in [\"list\"]:\n            return True\n        elif view.action in ['retrieve']:\n            return True\n        elif view.action in ['create','update']:\n            return AdminLevel(request) #second level\n            return ObjectBOwner(request) #third level\n        elif view.action == \"partial_update\":\n            return AdminLevel(request)\n        elif view.action == 'destroy':\n            return AdminLevel(request)\n\n"
        }
    ]
}