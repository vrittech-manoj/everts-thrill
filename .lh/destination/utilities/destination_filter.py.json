{
    "sourceFile": "destination/utilities/destination_filter.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1724821555571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724821611886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n+    collections = django_filters.CharFilter(method='filter_by_collections')\n     \n     package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n     min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n     max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n"
                },
                {
                    "date": 1724821620995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n-    collections = django_filters.CharFilter(method='filter_by_collections')\n+    packages = django_filters.CharFilter(method='filter_by_collections')\n     \n     package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n     min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n     max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n"
                },
                {
                    "date": 1724821649866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n-    packages = django_filters.CharFilter(method='filter_by_collections')\n+    packages = django_filters.CharFilter(method='filter_by_packages')\n     \n     package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n     min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n     max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n"
                },
                {
                    "date": 1724821656120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n     packages = django_filters.CharFilter(method='filter_by_packages')\n     \n-    package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n+    # package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n     min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n     max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n     class Meta:\n         model = Destination\n"
                },
                {
                    "date": 1724821664321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,5 +35,13 @@\n             queryset = queryset.filter(activities_id__in=activities)\n         except:\n             pass\n         return queryset\n+    def filter_by_activities(self, queryset, name, value):\n+        try:\n+            activities = self.request.GET.get('activities')\n+            activities = activities.split(',')\n+            queryset = queryset.filter(activities_id__in=activities)\n+        except:\n+            pass\n+        return queryset\n \n"
                },
                {
                    "date": 1724821674200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,13 @@\n             queryset = queryset.filter(activities_id__in=activities)\n         except:\n             pass\n         return queryset\n+    \n+    \n     def filter_by_activities(self, queryset, name, value):\n         try:\n-            activities = self.request.GET.get('activities')\n+            packages = self.request.GET.get('activities')\n             activities = activities.split(',')\n             queryset = queryset.filter(activities_id__in=activities)\n         except:\n             pass\n"
                },
                {
                    "date": 1724821680948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,11 +37,11 @@\n             pass\n         return queryset\n     \n     \n-    def filter_by_activities(self, queryset, name, value):\n+    def filter_by_packages(self, queryset, name, value):\n         try:\n-            packages = self.request.GET.get('activities')\n+            packages = self.request.GET.get('packages')\n             activities = activities.split(',')\n             queryset = queryset.filter(activities_id__in=activities)\n         except:\n             pass\n"
                },
                {
                    "date": 1724821686183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n     \n     def filter_by_packages(self, queryset, name, value):\n         try:\n             packages = self.request.GET.get('packages')\n-            activities = activities.split(',')\n-            queryset = queryset.filter(activities_id__in=activities)\n+            packages = packages.split(',')\n+            queryset = queryset.filter(activities_id__in=packages)\n         except:\n             pass\n         return queryset\n \n"
                },
                {
                    "date": 1724821784206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,9 @@\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n     packages = django_filters.CharFilter(method='filter_by_packages')\n     \n-    # package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n-    min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n-    max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n+\n     class Meta:\n         model = Destination\n         fields = {\n             'destination_title': ['exact', 'icontains'],\n@@ -41,9 +39,9 @@\n     def filter_by_packages(self, queryset, name, value):\n         try:\n             packages = self.request.GET.get('packages')\n             packages = packages.split(',')\n-            queryset = queryset.filter(activities_id__in=packages)\n+            queryset = queryset.filter(packages_id__in=packages)\n         except:\n             pass\n         return queryset\n \n"
                },
                {
                    "date": 1724821790822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n         model = Destination\n         fields = {\n             'destination_title': ['exact', 'icontains'],\n             'nature_of_trip': ['exact', 'icontains'],\n-            'duration': ['exact'],\n+            'duration': ['exact',],\n+            \n         }\n \n     def filter_by_collections(self, queryset, name, value):\n         try:\n"
                },
                {
                    "date": 1724821796157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         model = Destination\n         fields = {\n             'destination_title': ['exact', 'icontains'],\n             'nature_of_trip': ['exact', 'icontains'],\n-            'duration': ['exact',],\n+            'duration': ['exact','gte'],\n             \n         }\n \n     def filter_by_collections(self, queryset, name, value):\n"
                },
                {
                    "date": 1724829742542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,33 @@\n import django_filters\n from ..models import Destination\n-import ast\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n     packages = django_filters.CharFilter(method='filter_by_packages')\n-    \n \n     class Meta:\n         model = Destination\n         fields = {\n             'destination_title': ['exact', 'icontains'],\n             'nature_of_trip': ['exact', 'icontains'],\n-            'duration': ['exact','gte'],\n-            \n+            'duration': ['exact', 'gte', 'lte'],\n         }\n \n     def filter_by_collections(self, queryset, name, value):\n-        try:\n-            collections = self.request.GET.get('collections')\n-            collections = collections.split(',')\n-            queryset = queryset.filter(collections_id__in=collections)\n-        except:\n-            pass\n+        if value:\n+            collections = value.split(',') if ',' in value else [value]\n+            queryset = queryset.filter(collections__id__in=collections)\n         return queryset\n-    \n-    \n+\n     def filter_by_activities(self, queryset, name, value):\n-        try:\n-            activities = self.request.GET.get('activities')\n-            activities = activities.split(',')\n-            queryset = queryset.filter(activities_id__in=activities)\n-        except:\n-            pass\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            queryset = queryset.filter(activities__id__in=activities)\n         return queryset\n-    \n-    \n+\n     def filter_by_packages(self, queryset, name, value):\n-        try:\n-            packages = self.request.GET.get('packages')\n-            packages = packages.split(',')\n-            queryset = queryset.filter(packages_id__in=packages)\n-        except:\n-            pass\n+        if value:\n+            packages = value.split(',') if ',' in value else [value]\n+            queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n-\n"
                },
                {
                    "date": 1724940427759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,19 @@\n             collections = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(collections__id__in=collections)\n         return queryset\n \n-    def filter_by_activities(self, queryset, name, value):\n-        if value:\n-            activities = value.split(',') if ',' in value else [value]\n-            queryset = queryset.filter(activities__id__in=activities)\n-        return queryset\n-\n     def filter_by_packages(self, queryset, name, value):\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n+\n+    def filter_by_activities(self, queryset, name, value):\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            # Filter by activities directly related to the destination or through packages\n+            queryset = queryset.filter(\n+                django_filters.Q(activities__id__in=activities) | \n+                django_filters.Q(packages__activities__id__in=activities)\n+            ).distinct()\n+        return queryset\n"
                },
                {
                    "date": 1724942385594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,19 +19,15 @@\n             collections = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(collections__id__in=collections)\n         return queryset\n \n+    def filter_by_activities(self, queryset, name, value):\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            queryset = queryset.filter(activities__id__in=activities)\n+        return queryset\n+\n     def filter_by_packages(self, queryset, name, value):\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n-\n-    def filter_by_activities(self, queryset, name, value):\n-        if value:\n-            activities = value.split(',') if ',' in value else [value]\n-            # Filter by activities directly related to the destination or through packages\n-            queryset = queryset.filter(\n-                django_filters.Q(activities__id__in=activities) | \n-                django_filters.Q(packages__activities__id__in=activities)\n-            ).distinct()\n-        return queryset\n"
                },
                {
                    "date": 1724942644184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,20 @@\n             collections = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(collections__id__in=collections)\n         return queryset\n \n-    def filter_by_activities(self, queryset, name, value):\n-        if value:\n-            activities = value.split(',') if ',' in value else [value]\n-            queryset = queryset.filter(activities__id__in=activities)\n-        return queryset\n-\n     def filter_by_packages(self, queryset, name, value):\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n+\n+    def filter_by_activities(self, queryset, name, value):\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            # Filter by activities directly related to the destination or through packages\n+            queryset = queryset.filter(\n+                packages__activities__id__in=activities\n+            ).union(\n+                queryset.filter(activities__id__in=activities)\n+            ).distinct()\n+        return queryset\n"
                },
                {
                    "date": 1724943016971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import django_filters\n from ..models import Destination\n+from django.db.models import Q\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n     collections = django_filters.CharFilter(method='filter_by_collections')\n"
                },
                {
                    "date": 1724943029493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,14 +26,13 @@\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n-    def filter_by_activities(self, queryset, name, value):\n+def filter_by_activities(self, queryset, name, value):\n         if value:\n             activities = value.split(',') if ',' in value else [value]\n-            # Filter by activities directly related to the destination or through packages\n+            # Apply the filter on the queryset, whether it was filtered by packages or not\n             queryset = queryset.filter(\n-                packages__activities__id__in=activities\n-            ).union(\n-                queryset.filter(activities__id__in=activities)\n+                Q(packages__activities__id__in=activities) | \n+                Q(activities__id__in=activities)\n             ).distinct()\n         return queryset\n"
                },
                {
                    "date": 1724943695207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n import django_filters\n+from django.db.models import Q\n from ..models import Destination\n-from django.db.models import Q\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n-    collections = django_filters.CharFilter(method='filter_by_collections')\n     packages = django_filters.CharFilter(method='filter_by_packages')\n \n     class Meta:\n         model = Destination\n@@ -14,21 +13,15 @@\n             'nature_of_trip': ['exact', 'icontains'],\n             'duration': ['exact', 'gte', 'lte'],\n         }\n \n-    def filter_by_collections(self, queryset, name, value):\n-        if value:\n-            collections = value.split(',') if ',' in value else [value]\n-            queryset = queryset.filter(collections__id__in=collections)\n-        return queryset\n-\n     def filter_by_packages(self, queryset, name, value):\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n-def filter_by_activities(self, queryset, name, value):\n+    def filter_by_activities(self, queryset, name, value):\n         if value:\n             activities = value.split(',') if ',' in value else [value]\n             # Apply the filter on the queryset, whether it was filtered by packages or not\n             queryset = queryset.filter(\n"
                },
                {
                    "date": 1724943716174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n import django_filters\n+from ..models import Destination\n from django.db.models import Q\n-from ..models import Destination\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n+    collections = django_filters.CharFilter(method='filter_by_collections')\n     packages = django_filters.CharFilter(method='filter_by_packages')\n \n     class Meta:\n         model = Destination\n@@ -13,19 +14,25 @@\n             'nature_of_trip': ['exact', 'icontains'],\n             'duration': ['exact', 'gte', 'lte'],\n         }\n \n+    def filter_by_collections(self, queryset, name, value):\n+        if value:\n+            collections = value.split(',') if ',' in value else [value]\n+            queryset = queryset.filter(collections__id__in=collections)\n+        return queryset\n+\n     def filter_by_packages(self, queryset, name, value):\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n     def filter_by_activities(self, queryset, name, value):\n-        if value:\n-            activities = value.split(',') if ',' in value else [value]\n-            # Apply the filter on the queryset, whether it was filtered by packages or not\n-            queryset = queryset.filter(\n-                Q(packages__activities__id__in=activities) | \n-                Q(activities__id__in=activities)\n-            ).distinct()\n-        return queryset\n+            if value:\n+                activities = value.split(',') if ',' in value else [value]\n+                # Apply the filter on the queryset, whether it was filtered by packages or not\n+                queryset = queryset.filter(\n+                    Q(packages__activities__id__in=activities) | \n+                    Q(activities__id__in=activities)\n+                ).distinct()\n+            return queryset\n"
                },
                {
                    "date": 1724943793244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,12 @@\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n-    def filter_by_activities(self, queryset, name, value):\n-            if value:\n-                activities = value.split(',') if ',' in value else [value]\n-                # Apply the filter on the queryset, whether it was filtered by packages or not\n-                queryset = queryset.filter(\n-                    Q(packages__activities__id__in=activities) | \n-                    Q(activities__id__in=activities)\n-                ).distinct()\n-            return queryset\n+   def filter_by_activities(self, queryset, name, value):\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            # Filter destinations by activities associated with their packages\n+            queryset = queryset.filter(\n+                packages__in=Package.objects.filter(activities__id__in=activities)\n+            ).distinct()\n+        return queryset\n"
                },
                {
                    "date": 1724943843928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import django_filters\n from ..models import Destination\n+\n from django.db.models import Q\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n@@ -26,12 +27,12 @@\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n-   def filter_by_activities(self, queryset, name, value):\n-        if value:\n-            activities = value.split(',') if ',' in value else [value]\n-            # Filter destinations by activities associated with their packages\n-            queryset = queryset.filter(\n-                packages__in=Package.objects.filter(activities__id__in=activities)\n-            ).distinct()\n-        return queryset\n+    def filter_by_activities(self, queryset, name, value):\n+            if value:\n+                activities = value.split(',') if ',' in value else [value]\n+                # Filter destinations by activities associated with their packages\n+                queryset = queryset.filter(\n+                    packages__in=Package.objects.filter(activities__id__in=activities)\n+                ).distinct()\n+            return queryset\n"
                },
                {
                    "date": 1724943850100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import django_filters\n-from ..models import Destination\n-\n+from ..models import Destination,\n from django.db.models import Q\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n"
                },
                {
                    "date": 1724944001675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import django_filters\n-from ..models import Destination,\n+from ..models import Destination,Package\n from django.db.models import Q\n \n class DestinationFilter(django_filters.FilterSet):\n     activities = django_filters.CharFilter(method='filter_by_activities')\n@@ -26,12 +26,12 @@\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n-    def filter_by_activities(self, queryset, name, value):\n-            if value:\n-                activities = value.split(',') if ',' in value else [value]\n-                # Filter destinations by activities associated with their packages\n-                queryset = queryset.filter(\n-                    packages__in=Package.objects.filter(activities__id__in=activities)\n-                ).distinct()\n-            return queryset\n+ def filter_by_activities(self, queryset, name, value):\n+        if value:\n+            activities = value.split(',') if ',' in value else [value]\n+            # Filter destinations by activities directly associated with them\n+            queryset = queryset.filter(\n+                activities__id__in=activities\n+            ).distinct()\n+        return queryset\n"
                },
                {
                    "date": 1724944535930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,17 +21,21 @@\n             queryset = queryset.filter(collections__id__in=collections)\n         return queryset\n \n     def filter_by_packages(self, queryset, name, value):\n+        \"\"\"\n+        First filter destinations based on packages if provided.\n+        \"\"\"\n         if value:\n             packages = value.split(',') if ',' in value else [value]\n             queryset = queryset.filter(packages__id__in=packages)\n         return queryset\n \n- def filter_by_activities(self, queryset, name, value):\n+    def filter_by_activities(self, queryset, name, value):\n+        \"\"\"\n+        Filter the already filtered destinations (by packages) by activities if provided.\n+        If no packages filter is applied, it will filter directly by activities.\n+        \"\"\"\n         if value:\n             activities = value.split(',') if ',' in value else [value]\n-            # Filter destinations by activities directly associated with them\n-            queryset = queryset.filter(\n-                activities__id__in=activities\n-            ).distinct()\n+            queryset = queryset.filter(activities__id__in=activities).distinct()\n         return queryset\n"
                },
                {
                    "date": 1725863327279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n         fields = {\n             'destination_title': ['exact', 'icontains'],\n             'nature_of_trip': ['exact', 'icontains'],\n             'duration': ['exact', 'gte', 'lte'],\n+            'duration': ['exact', 'gte', 'lte'],\n         }\n \n     def filter_by_collections(self, queryset, name, value):\n         if value:\n"
                }
            ],
            "date": 1724821555571,
            "name": "Commit-0",
            "content": "import django_filters\nfrom ..models import Destination\nimport ast\n\nclass DestinationFilter(django_filters.FilterSet):\n    activities = django_filters.CharFilter(method='filter_by_activities')\n    collections = django_filters.CharFilter(method='filter_by_collections')\n    \n    package_id = django_filters.CharFilter(field_name='packages__id', lookup_expr='exact')\n    min_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='gte')\n    max_duration = django_filters.NumberFilter(field_name='duration', lookup_expr='lte')\n    class Meta:\n        model = Destination\n        fields = {\n            'destination_title': ['exact', 'icontains'],\n            'nature_of_trip': ['exact', 'icontains'],\n            'duration': ['exact'],\n        }\n\n    def filter_by_collections(self, queryset, name, value):\n        try:\n            collections = self.request.GET.get('collections')\n            collections = collections.split(',')\n            queryset = queryset.filter(collections_id__in=collections)\n        except:\n            pass\n        return queryset\n    \n    \n    def filter_by_activities(self, queryset, name, value):\n        try:\n            activities = self.request.GET.get('activities')\n            activities = activities.split(',')\n            queryset = queryset.filter(activities_id__in=activities)\n        except:\n            pass\n        return queryset\n\n"
        }
    ]
}