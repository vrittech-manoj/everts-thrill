{
    "sourceFile": "blog/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1724906622951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724906629350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user\n+    users = mod\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1724906656840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    users = mod\n+     user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1724906673665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n from django.db import models\n import uuid\n from django.utils.text import slugify\n+from accounts.models import CustomUser\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-     user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n+    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1724906689326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser, related_name=\"review\", on_delete=models.CASCADE)\n+    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1724907890293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE)\n+    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1724916203284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+from django.db import models\n+import uuid\n+from django.utils.text import slugify\n+from accounts.models import CustomUser\n+\n+# Create your models here.\n+class Blog(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n+    title = models.CharField(max_length = 150,blank=True)\n+    description = models.TextField(blank = True,null = True)\n+    featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+    is_price = models.BooleanField(default=False)\n+  \n+    def __str__(self):\n+        return self.title\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1724916210681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,27 +11,9 @@\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n-    is_price = models.BooleanField(default=False)\n+    is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n         return self.title\n-    \n-from django.db import models\n-import uuid\n-from django.utils.text import slugify\n-from accounts.models import CustomUser\n-\n-# Create your models here.\n-class Blog(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null)\n-    title = models.CharField(max_length = 150,blank=True)\n-    description = models.TextField(blank = True,null = True)\n-    featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-  \n-    def __str__(self):\n-        return self.title\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1724916418657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     title = models.CharField(max_length = 150,blank=True)\n+    title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n"
                },
                {
                    "date": 1724916423840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     title = models.CharField(max_length = 150,blank=True)\n-    title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n"
                },
                {
                    "date": 1724916430629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n+    read_time = models.CharField(max_length = 150,blank=True)\n     is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n         return self.title\n"
                },
                {
                    "date": 1724916646124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n-    read_time = models.CharField(max_length = 150,blank=True)\n+    read_time = models.CharField(max_length = 150,)\n     is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n         return self.title\n"
                },
                {
                    "date": 1724916652080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n-    read_time = models.CharField(max_length = 150,)\n+    read_time = models.CharField(max_length = 150,default=\"\")\n     is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n         return self.title\n"
                },
                {
                    "date": 1725171413689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,15 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n+        user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n-    read_time = models.CharField(max_length = 150,default=\"\")\n+    read_time = models.CharField(max_length = 150,default=\"10 mins\")\n     is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n\\ No newline at end of file\n         return self.title\n-    \n"
                },
                {
                    "date": 1725341315685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,17 @@\n \n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-        user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n+    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n+    created_by =\n     updated_date = models.DateTimeField(auto_now=True)\n     read_time = models.CharField(max_length = 150,default=\"10 mins\")\n     is_popular = models.BooleanField(default=False)\n   \n\\ No newline at end of file\n     def __str__(self):\n-        return self.title\n+        return self.title\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725341323824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     title = models.CharField(max_length = 150,blank=True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n-    created_by =\n+    created_by = models.CharField(max_length = 150,blank=True)\n     updated_date = models.DateTimeField(auto_now=True)\n     read_time = models.CharField(max_length = 150,default=\"10 mins\")\n     is_popular = models.BooleanField(default=False)\n   \n"
                },
                {
                    "date": 1725526542532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n-    title = models.CharField(max_length = 150,blank=True)\n+    title = models.CharField(max_length = 150,unique = True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n     created_by = models.CharField(max_length = 150,blank=True)\n"
                },
                {
                    "date": 1725526563318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n # Create your models here.\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n+    slug = models.SlugField(unique=True, blank=True)\n     title = models.CharField(max_length = 150,unique = True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateTimeField(auto_now_add=True)\n"
                },
                {
                    "date": 1725526577412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,5 +18,10 @@\n     is_popular = models.BooleanField(default=False)\n   \n     def __str__(self):\n         return self.title\n+    \n+     def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = f'{slugify(self.destination_title)}'\n+\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725526586114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,7 +21,7 @@\n         return self.title\n     \n      def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = f'{slugify(self.destination_title)}'\n+            self.slug = f'{slugify(self.title)}'\n \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725526603131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   \n     def __str__(self):\n         return self.title\n     \n-     def save(self, *args, **kwargs):\n+    def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725593122846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,6 +22,7 @@\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n+        uper(Blog, self).save(*args, **kwargs)\n \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725789513063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n     slug = models.SlugField(unique=True, blank=True)\n     title = models.CharField(max_length = 150,unique = True)\n     description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n-    created_date = models.DateTimeField(auto_now_add=True)\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     created_by = models.CharField(max_length = 150,blank=True)\n     updated_date = models.DateTimeField(auto_now=True)\n     read_time = models.CharField(max_length = 150,default=\"10 mins\")\n     is_popular = models.BooleanField(default=False)\n@@ -22,7 +23,7 @@\n     \n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n-        uper(Blog, self).save(*args, **kwargs)\n+        super(Blog, self).save(*args, **kwargs)\n \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725793071361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,15 @@\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n+    \n+     def destroy(self, request, *args, **kwargs):\n+        instance = self.get_object()\n+        self.perform_destroy(instance)\n+        \n+        return Response(\n+            {\"detail\": \"Item/s successfully deleted.\"}, \n+            status=status.HTTP_200_OK\n+        )\n \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725793089823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n     \n-     def destroy(self, request, *args, **kwargs):\n+    def destroy(self, request, *args, **kwargs):\n         instance = self.get_object()\n         self.perform_destroy(instance)\n         \n         return Response(\n"
                },
                {
                    "date": 1725793098692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,5 @@\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n-    \n-    def destroy(self, request, *args, **kwargs):\n-        instance = self.get_object()\n-        self.perform_destroy(instance)\n-        \n-        return Response(\n-            {\"detail\": \"Item/s successfully deleted.\"}, \n-            status=status.HTTP_200_OK\n-        )\n-\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725793103757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,5 +24,5 @@\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n-    \n\\ No newline at end of file\n+        \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725868045148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     slug = models.SlugField(unique=True, blank=True)\n     title = models.CharField(max_length = 150,unique = True)\n     description = models.TextField(blank = True,null = True)\n+    description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n     created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     created_by = models.CharField(max_length = 150,blank=True)\n@@ -24,5 +25,6 @@\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n-        \n\\ No newline at end of file\n+\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1726034332348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n     slug = models.SlugField(unique=True, blank=True)\n     title = models.CharField(max_length = 150,unique = True)\n     description = models.TextField(blank = True,null = True)\n-    description = models.TextField(blank = True,null = True)\n+    short_description = models.TextField(blank = True,null = True)\n     featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n     created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n     created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     created_by = models.CharField(max_length = 150,blank=True)\n"
                },
                {
                    "date": 1726373330066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,26 +3,9 @@\n from django.utils.text import slugify\n from accounts.models import CustomUser\n \n # Create your models here.\n-class Blog(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE,null=True)\n-    slug = models.SlugField(unique=True, blank=True)\n-    title = models.CharField(max_length = 150,unique = True)\n-    description = models.TextField(blank = True,null = True)\n-    short_description = models.TextField(blank = True,null = True)\n-    featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n-    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n-    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    created_by = models.CharField(max_length = 150,blank=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-    read_time = models.CharField(max_length = 150,default=\"10 mins\")\n-    is_popular = models.BooleanField(default=False)\n-  \n-    def __str__(self):\n-        return self.title\n-    \n+a\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n         super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726373415864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,43 @@\n from django.utils.text import slugify\n from accounts.models import CustomUser\n \n # Create your models here.\n-a\n+from django.utils.text import slugify\n+import uuid\n+\n+class Blog(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n+    user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE, null=True)\n\\ No newline at end of file\n+    slug = models.SlugField(unique=True, blank=True)\n+    title = models.CharField(max_length=150, unique=True)\n+    description = models.TextField(blank=True, null=True)\n+    short_description = models.TextField(blank=True, null=True)\n+    featured_image = models.ImageField(upload_to=\"blog/images\", null=True, blank=True)\n+    created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null=True, blank=True)\n+    created_by = models.CharField(max_length=150, blank=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+    read_time = models.CharField(max_length=150, default=\"10 mins\")\n+    is_popular = models.BooleanField(default=False)\n+\n+    # Meta fields\n+    meta_title = models.CharField(max_length=150, blank=True, null=True)\n+    meta_description = models.TextField(blank=True, null=True)\n+    meta_keywords = models.TextField(blank=True, null=True)\n+\n+    def __str__(self):\n+        return self.title\n+\n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n+        \n+        # Auto-populate meta fields if not provided\n+        if not self.meta_title:\n+            self.meta_title = self.title  # Default to title if meta_title not provided\n+        if not self.meta_description:\n+            self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n+        if not self.meta_keywords:\n+            self.meta_keywords = ', '.join(self.title.split())  # Generate keywords from title if not provided\n+        \n         super(Blog, self).save(*args, **kwargs)\n-\n-    \n"
                },
                {
                    "date": 1726373427877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n import uuid\n from django.utils.text import slugify\n from accounts.models import CustomUser\n \n-# Create your models here.\n-from django.utils.text import slugify\n-import uuid\n \n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE, null=True)\n@@ -41,5 +38,5 @@\n             self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n         if not self.meta_keywords:\n             self.meta_keywords = ', '.join(self.title.split())  # Generate keywords from title if not provided\n         \n-        super(Blog, self).save(*args, **kwargs)\n\\ No newline at end of file\n+        super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726373441218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             self.slug = f'{slugify(self.title)}'\n         \n         # Auto-populate meta fields if not provided\n         if not self.meta_title:\n-            self.meta_title = self.title  # Default to title if meta_title not provided\n+            self.meta_title = self.title  \n         if not self.meta_description:\n             self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n         if not self.meta_keywords:\n             self.meta_keywords = ', '.join(self.title.split())  # Generate keywords from title if not provided\n"
                },
                {
                    "date": 1726373459900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,7 +36,7 @@\n             self.meta_title = self.title  \n         if not self.meta_description:\n             self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n         if not self.meta_keywords:\n-            self.meta_keywords = ', '.join(self.title.split())  # Generate keywords from title if not provided\n+            self.meta_keywords = ', '.join(self.title.split()\n         \n         super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726373537430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,7 +36,7 @@\n             self.meta_title = self.title  \n         if not self.meta_description:\n             self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n         if not self.meta_keywords:\n-            self.meta_keywords = ', '.join(self.title.split()\n+            self.meta_keywords = ', '.join(self.title.split())\n         \n         super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726373780102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         # Auto-populate meta fields if not provided\n         if not self.meta_title:\n             self.meta_title = self.title  \n         if not self.meta_description:\n-            self.meta_description = self.short_description or self.description[:160]  # Default to short description or first 160 chars of description\n+            self.meta_description = self.short_description or self.description[:100]  # Default to short description or first 160 chars of description\n         if not self.meta_keywords:\n             self.meta_keywords = ', '.join(self.title.split())\n         \n         super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726373785299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         # Auto-populate meta fields if not provided\n         if not self.meta_title:\n             self.meta_title = self.title  \n         if not self.meta_description:\n-            self.meta_description = self.short_description or self.description[:100]  # Default to short description or first 160 chars of description\n+            self.meta_description = self.short_description or self.description[:100]  \n         if not self.meta_keywords:\n             self.meta_keywords = ', '.join(self.title.split())\n         \n         super(Blog, self).save(*args, **kwargs)\n"
                },
                {
                    "date": 1726641052270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.title)}'\n+            self.slug = slugify(self.title)[:200]\n         \n         # Auto-populate meta fields if not provided\n         if not self.meta_title:\n             self.meta_title = self.title  \n"
                },
                {
                    "date": 1726641064962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n         return self.title\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = f'{slugify(self.title)}'\n             self.slug = slugify(self.title)[:200]\n         \n         # Auto-populate meta fields if not provided\n         if not self.meta_title:\n"
                },
                {
                    "date": 1726641091092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n class Blog(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n     user = models.ForeignKey(CustomUser, related_name=\"user_blog\", on_delete=models.CASCADE, null=True)\n     slug = models.SlugField(unique=True, blank=True)\n-    title = models.CharField(max_length=150, unique=True)\n+    title = models.CharField( unique=True)\n     description = models.TextField(blank=True, null=True)\n     short_description = models.TextField(blank=True, null=True)\n     featured_image = models.ImageField(upload_to=\"blog/images\", null=True, blank=True)\n     created_date = models.DateField(auto_now_add=True, null=True, blank=True)\n"
                }
            ],
            "date": 1724906622951,
            "name": "Commit-0",
            "content": "from django.db import models\nimport uuid\nfrom django.utils.text import slugify\n\n# Create your models here.\nclass Blog(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n    user\n    title = models.CharField(max_length = 150,blank=True)\n    description = models.TextField(blank = True,null = True)\n    featured_image = models.ImageField(upload_to=\"blog/images\",null=True,blank=True)\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n  \n    def __str__(self):\n        return self.title\n    "
        }
    ]
}