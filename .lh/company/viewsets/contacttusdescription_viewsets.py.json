{
    "sourceFile": "company/viewsets/contacttusdescription_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1726130700922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1726130708714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n from ..utilities.importbase import *\n \n class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n-    # permission_classes = [companyPermission]\n-    # authentication_classes = [JWTAuthentication]\n-    #pagination_class = MyPageNumberPagination\n+    permission_classes = [companyPermission]\n+    authentication_classes = [JWTAuthentication]\n+    pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n"
                },
                {
                    "date": 1726130737969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n     permission_classes = [companyPermission]\n-    authentication_classes = [JWTAuthentication]\n+    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n@@ -33,5 +33,52 @@\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n+    \n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-about-us\")\n+    def create_update_about_us(self, request, *args, **kwargs):\n+        description = request.data.get('description', None)\n \n+        if not description:\n+            return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+\n+        about_us = AboutUs.objects.all()\n+\n+        if about_us.exists():\n+            # Update the existing AboutUs entry\n+            about_us = about_us.first()\n+            about_us.description = description\n+            about_us.save()\n+            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n+        else:\n+            # Create a new AboutUs entry\n+            new_about_us = AboutUs.objects.create(description=description)\n+            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+\n+    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n+    def retrieve_update_about_us(self, request, *args, **kwargs):\n+        try:\n+            # Assuming there's only one AboutUs entry, get the first one.\n+            about_us = AboutUs.objects.first()\n+\n+            if not about_us:\n+                return Response({\"data\": None}, status=status.HTTP_200_OK)\n+\n+        except AboutUs.DoesNotExist:\n+            return Response({\"error\": \"About Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n+\n+        if request.method == 'GET':\n+            # Retrieve the About Us entry\n+            serializer = AboutUsRetrieveSerializers(about_us)\n+            return Response(serializer.data, status=status.HTTP_200_OK)\n+\n+        elif request.method == 'PUT':\n+            description = request.data.get('description', None)\n+\n+            if not description:\n+                return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n+\n+            about_us.description = description\n+            about_us.save()\n+            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n+\n"
                },
                {
                    "date": 1726130757063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,11 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ContacttUsDescription\n from ..serializers.contacttusdescription_serializers import ContacttUsDescriptionListSerializers, ContacttUsDescriptionRetrieveSerializers, ContacttUsDescriptionWriteSerializers\n from ..utilities.importbase import *\n+from rest_framework.decorators import action\n+from rest_framework.response import Response\n+from rest_framework import status\n \n class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n     permission_classes = [companyPermission]\n"
                },
                {
                    "date": 1726130781348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        about_us = AboutUs.objects.all()\n+         = AboutUs.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1726130790233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-         = AboutUs.objects.all()\n+        de = AboutUs.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1726130802608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        de = AboutUs.objects.all()\n+        contact_us = AboutUs.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1726130820857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        contact_us = AboutUs.objects.all()\n+        contact_us = ContacttUsDescription.objects.all()\n \n         if about_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n"
                },
                {
                    "date": 1726130830554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n         contact_us = ContacttUsDescription.objects.all()\n \n-        if about_us.exists():\n+        if contact_us.exists():\n             # Update the existing AboutUs entry\n             about_us = about_us.first()\n             about_us.description = description\n             about_us.save()\n"
                },
                {
                    "date": 1726130836957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n         contact_us = ContacttUsDescription.objects.all()\n \n         if contact_us.exists():\n             # Update the existing AboutUs entry\n-            about_us = about_us.first()\n-            about_us.description = description\n-            about_us.save()\n+            contact_us = contact_us.first()\n+            contact_us.description = description\n+            contact_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n             new_about_us = AboutUs.objects.create(description=description)\n"
                },
                {
                    "date": 1726130851002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             contact_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n-            new_about_us = AboutUs.objects.create(description=description)\n+            new_about_us = ContacttUsDescription.objects.create(description=description)\n             return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n \n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n"
                },
                {
                    "date": 1726130859160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             contact_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n-            new_about_us = ContacttUsDescription.objects.create(description=description)\n+            new_contact_us = ContacttUsDescription.objects.create(description=description)\n             return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n \n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n"
                },
                {
                    "date": 1726130866591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new AboutUs entry\n             new_contact_us = ContacttUsDescription.objects.create(description=description)\n-            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_about_us.id}, status=status.HTTP_201_CREATED)\n+            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_contact_us.id}, status=status.HTTP_201_CREATED)\n \n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n"
                },
                {
                    "date": 1726130909090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n-            about_us = AboutUs.objects.first()\n+            about_us = ContacttUsDescription.objects.first()\n \n             if not about_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n"
                },
                {
                    "date": 1726130916483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n-            about_us = ContacttUsDescription.objects.first()\n+            cantact_us = ContacttUsDescription.objects.first()\n \n             if not about_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n"
                },
                {
                    "date": 1726130922019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n-            cantact_us = ContacttUsDescription.objects.first()\n+            contact_us = ContacttUsDescription.objects.first()\n \n             if not about_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n"
                },
                {
                    "date": 1726130930154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n             contact_us = ContacttUsDescription.objects.first()\n \n-            if not about_us:\n+            if not contact_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n         except AboutUs.DoesNotExist:\n             return Response({\"error\": \"About Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n"
                },
                {
                    "date": 1726130952411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,14 @@\n \n             if not contact_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n-        except AboutUs.DoesNotExist:\n+        except ContacttUsDescription.DoesNotExist:\n             return Response({\"error\": \"About Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n \n         if request.method == 'GET':\n             # Retrieve the About Us entry\n-            serializer = AboutUsRetrieveSerializers(about_us)\n+            serializer = ContacttUsDescriptionRetrieveSerializers(about_us)\n             return Response(serializer.data, status=status.HTTP_200_OK)\n \n         elif request.method == 'PUT':\n             description = request.data.get('description', None)\n"
                },
                {
                    "date": 1726130957739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n             return Response({\"error\": \"About Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n \n         if request.method == 'GET':\n             # Retrieve the About Us entry\n-            serializer = ContacttUsDescriptionRetrieveSerializers(about_us)\n+            serializer = ContacttUsDescriptionRetrieveSerializers(contact_us)\n             return Response(serializer.data, status=status.HTTP_200_OK)\n \n         elif request.method == 'PUT':\n             description = request.data.get('description', None)\n"
                },
                {
                    "date": 1726131108126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,8 @@\n \n             if not description:\n                 return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-            about_us.description = description\n+            contact_us.description = description\n             about_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n \n"
                },
                {
                    "date": 1726131142882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,7 +81,7 @@\n             if not description:\n                 return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n             contact_us.description = description\n-            about_us.save()\n+            contact_us.save()\n             return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n \n"
                },
                {
                    "date": 1726131148056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-about-us\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-c-us\")\n     def create_update_about_us(self, request, *args, **kwargs):\n         description = request.data.get('description', None)\n \n         if not description:\n"
                },
                {
                    "date": 1726131154526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n     \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-c-us\")\n+    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-contact-us\")\n     def create_update_about_us(self, request, *args, **kwargs):\n         description = request.data.get('description', None)\n \n         if not description:\n"
                },
                {
                    "date": 1726131163818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n             # Create a new AboutUs entry\n             new_contact_us = ContacttUsDescription.objects.create(description=description)\n             return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_contact_us.id}, status=status.HTTP_201_CREATED)\n \n-    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-about-us\")\n+    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-contatc-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n             contact_us = ContacttUsDescription.objects.first()\n"
                },
                {
                    "date": 1726131174439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n             # Create a new AboutUs entry\n             new_contact_us = ContacttUsDescription.objects.create(description=description)\n             return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_contact_us.id}, status=status.HTTP_201_CREATED)\n \n-    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-contatc-us\")\n+    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-contact-us\")\n     def retrieve_update_about_us(self, request, *args, **kwargs):\n         try:\n             # Assuming there's only one AboutUs entry, get the first one.\n             contact_us = ContacttUsDescription.objects.first()\n"
                },
                {
                    "date": 1726131357486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +1,79 @@\n from rest_framework import viewsets\n from rest_framework.filters import SearchFilter, OrderingFilter\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import ContacttUsDescription\n-from ..serializers.contacttusdescription_serializers import ContacttUsDescriptionListSerializers, ContacttUsDescriptionRetrieveSerializers, ContacttUsDescriptionWriteSerializers\n+from ..serializers.contacttusdescription_serializers import (\n+    ContacttUsDescriptionListSerializers, \n+    ContacttUsDescriptionRetrieveSerializers, \n+    ContacttUsDescriptionWriteSerializers\n+)\n from ..utilities.importbase import *\n from rest_framework.decorators import action\n from rest_framework.response import Response\n from rest_framework import status\n \n-class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n+\n+class ContacttUsDescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n     permission_classes = [companyPermission]\n-    # authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id']\n     ordering_fields = ['id']\n-\n     filterset_fields = {\n         'id': ['exact'],\n     }\n \n-    def get_queryset(self):\n-        queryset = super().get_queryset()\n-        #return queryset.filter(user_id=self.request.user.id)\n-\n     def get_serializer_class(self):\n         if self.action in ['create', 'update', 'partial_update']:\n             return ContacttUsDescriptionWriteSerializers\n         elif self.action == 'retrieve':\n             return ContacttUsDescriptionRetrieveSerializers\n         return super().get_serializer_class()\n \n-    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n-    # def action_name(self, request, *args, **kwargs):\n-    #     return super().list(request, *args, **kwargs)\n-    \n-    @action(detail=False, methods=['post'], name=\"create-update\", url_path=\"create-contact-us\")\n-    def create_update_about_us(self, request, *args, **kwargs):\n+    @action(detail=False, methods=['post'], name=\"create-contact-us\", url_path=\"create-contact-us\")\n+    def create_update_contact_us(self, request, *args, **kwargs):\n         description = request.data.get('description', None)\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        contact_us = ContacttUsDescription.objects.all()\n+        contact_description = ContacttUsDescription.objects.first()\n \n-        if contact_us.exists():\n-            # Update the existing AboutUs entry\n-            contact_us = contact_us.first()\n-            contact_us.description = description\n-            contact_us.save()\n-            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n+        if contact_description:\n+            # Update the existing Contact Us entry\n+            contact_description.description = description\n+            contact_description.save()\n+            return Response({\"message\": \"Contact Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n-            # Create a new AboutUs entry\n-            new_contact_us = ContacttUsDescription.objects.create(description=description)\n-            return Response({\"message\": \"About Us section created successfully.\", \"about_us_id\": new_contact_us.id}, status=status.HTTP_201_CREATED)\n+            # Create a new Contact Us entry\n+            new_contact_description = ContacttUsDescription.objects.create(description=description)\n+            return Response({\"message\": \"Contact Us section created successfully.\", \"contact_us_id\": new_contact_description.id}, status=status.HTTP_201_CREATED)\n \n-    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update\", url_path=\"detail-contact-us\")\n-    def retrieve_update_about_us(self, request, *args, **kwargs):\n+    @action(detail=False, methods=['get', 'put'], name=\"retrieve-update-contact-us\", url_path=\"detail-contact-us\")\n+    def retrieve_update_contact_us(self, request, *args, **kwargs):\n         try:\n-            # Assuming there's only one AboutUs entry, get the first one.\n-            contact_us = ContacttUsDescription.objects.first()\n+            contact_description = ContacttUsDescription.objects.first()\n \n-            if not contact_us:\n+            if not contact_description:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n         except ContacttUsDescription.DoesNotExist:\n-            return Response({\"error\": \"About Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n+            return Response({\"error\": \"Contact Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n \n         if request.method == 'GET':\n-            # Retrieve the About Us entry\n-            serializer = ContacttUsDescriptionRetrieveSerializers(contact_us)\n+            # Retrieve the Contact Us entry\n+            serializer = ContacttUsDescriptionRetrieveSerializers(contact_description)\n             return Response(serializer.data, status=status.HTTP_200_OK)\n \n         elif request.method == 'PUT':\n             description = request.data.get('description', None)\n \n             if not description:\n                 return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-            contact_us.description = description\n-            contact_us.save()\n-            return Response({\"message\": \"About Us section updated successfully.\"}, status=status.HTTP_200_OK)\n-\n+            contact_description.description = description\n+            contact_description.save()\n+            return Response({\"message\": \"Contact Us section updated successfully.\"}, status=status.HTTP_200_OK)\n"
                },
                {
                    "date": 1726131424872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n from rest_framework.response import Response\n from rest_framework import status\n \n \n-class ContacttUsDescriptionViewsets(viewsets.ModelViewSet):\n+class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n     permission_classes = [companyPermission]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n"
                },
                {
                    "date": 1726131546911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n \n class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n-    permission_classes = [companyPermission]\n+    # permission_classes = [companyPermission]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n"
                },
                {
                    "date": 1726131733145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,11 @@\n from rest_framework.response import Response\n from rest_framework import status\n \n \n-class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n+class ContacttUsDescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n-    # permission_classes = [companyPermission]\n+    permission_classes = [companyPermission]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n@@ -39,41 +39,42 @@\n \n         if not description:\n             return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-        contact_description = ContacttUsDescription.objects.first()\n+        contact_us = ContacttUsDescription.objects.all()\n \n-        if contact_description:\n+        if contact_us.exists():\n             # Update the existing Contact Us entry\n-            contact_description.description = description\n-            contact_description.save()\n+            contact_us_instance = contact_us.first()\n+            contact_us_instance.description = description\n+            contact_us_instance.save()\n             return Response({\"message\": \"Contact Us section updated successfully.\"}, status=status.HTTP_200_OK)\n         else:\n             # Create a new Contact Us entry\n-            new_contact_description = ContacttUsDescription.objects.create(description=description)\n-            return Response({\"message\": \"Contact Us section created successfully.\", \"contact_us_id\": new_contact_description.id}, status=status.HTTP_201_CREATED)\n+            new_contact_us = ContacttUsDescription.objects.create(description=description)\n+            return Response({\"message\": \"Contact Us section created successfully.\", \"contact_us_id\": new_contact_us.id}, status=status.HTTP_201_CREATED)\n \n     @action(detail=False, methods=['get', 'put'], name=\"retrieve-update-contact-us\", url_path=\"detail-contact-us\")\n     def retrieve_update_contact_us(self, request, *args, **kwargs):\n         try:\n-            contact_description = ContacttUsDescription.objects.first()\n+            contact_us = ContacttUsDescription.objects.first()\n \n-            if not contact_description:\n+            if not contact_us:\n                 return Response({\"data\": None}, status=status.HTTP_200_OK)\n \n         except ContacttUsDescription.DoesNotExist:\n             return Response({\"error\": \"Contact Us section not found.\"}, status=status.HTTP_404_NOT_FOUND)\n \n         if request.method == 'GET':\n             # Retrieve the Contact Us entry\n-            serializer = ContacttUsDescriptionRetrieveSerializers(contact_description)\n+            serializer = ContacttUsDescriptionRetrieveSerializers(contact_us)\n             return Response(serializer.data, status=status.HTTP_200_OK)\n \n         elif request.method == 'PUT':\n             description = request.data.get('description', None)\n \n             if not description:\n                 return Response({\"error\": \"Description is required.\"}, status=status.HTTP_400_BAD_REQUEST)\n \n-            contact_description.description = description\n-            contact_description.save()\n+            contact_us.description = description\n+            contact_us.save()\n             return Response({\"message\": \"Contact Us section updated successfully.\"}, status=status.HTTP_200_OK)\n"
                },
                {
                    "date": 1726131750419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n from rest_framework.response import Response\n from rest_framework import status\n \n \n-class ContacttUsDescriptionViewsets(viewsets.ModelViewSet):\n+class contacttusdescriptionViewsets(viewsets.ModelViewSet):\n     serializer_class = ContacttUsDescriptionListSerializers\n     permission_classes = [companyPermission]\n     pagination_class = MyPageNumberPagination\n     queryset = ContacttUsDescription.objects.all()\n"
                }
            ],
            "date": 1726130700922,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import ContacttUsDescription\nfrom ..serializers.contacttusdescription_serializers import ContacttUsDescriptionListSerializers, ContacttUsDescriptionRetrieveSerializers, ContacttUsDescriptionWriteSerializers\nfrom ..utilities.importbase import *\n\nclass contacttusdescriptionViewsets(viewsets.ModelViewSet):\n    serializer_class = ContacttUsDescriptionListSerializers\n    # permission_classes = [companyPermission]\n    # authentication_classes = [JWTAuthentication]\n    #pagination_class = MyPageNumberPagination\n    queryset = ContacttUsDescription.objects.all()\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id']\n    ordering_fields = ['id']\n\n    filterset_fields = {\n        'id': ['exact'],\n    }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        #return queryset.filter(user_id=self.request.user.id)\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return ContacttUsDescriptionWriteSerializers\n        elif self.action == 'retrieve':\n            return ContacttUsDescriptionRetrieveSerializers\n        return super().get_serializer_class()\n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}