{
    "sourceFile": "trek/settings.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1725173939253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725429386285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,17 @@\n DEBUG = True\n ALLOWED_HOSTS = [host for host in os.getenv('ALLOWED_HOSTS').split(',') if host != '']\n \n # Application definition\n+# settings.py\n \n+# settings.py\n+\n+FILE_UPLOAD_MAX_MEMORY_SIZE = 850 * 1024 * 1024  # 850 MB\n+DATA_UPLOAD_MAX_MEMORY_SIZE = 850 * 1024 * 1024  # 850 MB\n+\n+\n+\n INSTALLED_APPS = [\n     # 'daphne',\n     # 'admin_interface',\n     'colorfield',\n@@ -84,10 +92,10 @@\n \n CORS_ORIGIN_ALLOW_ALL = True\n CORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\n CSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n+print(CSRF_TRUSTED_ORIGINS, \"\\n csrf\")\n \n-\n MIDDLEWARE = [\n     'corsheaders.middleware.CorsMiddleware',\n     'django.middleware.common.CommonMiddleware',\n \n@@ -120,9 +128,9 @@\n \n WSGI_APPLICATION = 'trek.wsgi.application'\n \n # Database\n-# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n+#https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n \n DATABASES = {\n     'default': {\n         'ENGINE': os.getenv('DATABASE_ENGINE'),\n@@ -177,9 +185,12 @@\n     BASE_DIR / \"static\",\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n+MEDIA_URL = '/media/'\n+MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n \n+\n # Default primary key field type\n # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n \n DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"
                },
                {
                    "date": 1725429400681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n MEDIA_URL = '/media/'\n-MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n+# MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n \n \n # Default primary key field type\n # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n"
                },
                {
                    "date": 1725429533023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n MEDIA_URL = '/media/'\n-# MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n+MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n \n \n # Default primary key field type\n # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n"
                },
                {
                    "date": 1725429915265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,13 +184,13 @@\n STATICFILES_DIRS = [\n     BASE_DIR / \"static\",\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n-MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n+# MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n MEDIA_URL = '/media/'\n-MEDIA_ROOT = '/home/ubuntu/evrest_thrill/media/'\n \n \n+\n # Default primary key field type\n # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n \n DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n"
                },
                {
                    "date": 1725430221165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,10 +184,10 @@\n STATICFILES_DIRS = [\n     BASE_DIR / \"static\",\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n-# MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n-MEDIA_URL = '/media/'\n+MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n+MEDIA_URL = 'media/'\n \n \n \n # Default primary key field type\n"
                },
                {
                    "date": 1725443386083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n print(current_os, \" operatitng system\")\n \n if current_os == \"Linux\" and server_type == \"AWS\":\n     dotenv_path = os.path.join(os.path.dirname(__file__), '.env') #server env\n-    print(current_os ,f\":{server_type} server env connected\")\n else:\n     dotenv_path = os.path.join(os.path.dirname(__file__), 'env_local') #this is local env\n     print(current_os , \":local env connected\")\n load_dotenv(dotenv_path)\n"
                },
                {
                    "date": 1725443400030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n if current_os == \"Linux\" and server_type == \"AWS\":\n     dotenv_path = os.path.join(os.path.dirname(__file__), '.env') #server env\n else:\n     dotenv_path = os.path.join(os.path.dirname(__file__), 'env_local') #this is local env\n-    print(current_os , \":local env connected\")\n load_dotenv(dotenv_path)\n \n # Quick-start development settings - unsuitable for production\n # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n"
                },
                {
                    "date": 1725443407604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,10 +90,10 @@\n \n CORS_ORIGIN_ALLOW_ALL = True\n CORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\n CSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n-print(CSRF_TRUSTED_ORIGINS, \"\\n csrf\")\n \n+\n MIDDLEWARE = [\n     'corsheaders.middleware.CorsMiddleware',\n     'django.middleware.common.CommonMiddleware',\n \n"
                },
                {
                    "date": 1725443503532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n # Build paths inside the project like this: BASE_DIR / 'subdir'.\n BASE_DIR = Path(__file__).resolve().parent.parent\n \n current_os = platform.system()\n-print(current_os, \" operatitng system\")\n \n if current_os == \"Linux\" and server_type == \"AWS\":\n     dotenv_path = os.path.join(os.path.dirname(__file__), '.env') #server env\n else:\n@@ -91,9 +90,8 @@\n CORS_ORIGIN_ALLOW_ALL = True\n CORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\n CSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n \n-\n MIDDLEWARE = [\n     'corsheaders.middleware.CorsMiddleware',\n     'django.middleware.common.CommonMiddleware',\n \n"
                },
                {
                    "date": 1725528412916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,16 @@\n # Build paths inside the project like this: BASE_DIR / 'subdir'.\n BASE_DIR = Path(__file__).resolve().parent.parent\n \n current_os = platform.system()\n+print(current_os, \" operatitng system\")\n \n if current_os == \"Linux\" and server_type == \"AWS\":\n     dotenv_path = os.path.join(os.path.dirname(__file__), '.env') #server env\n+    print(current_os ,f\":{server_type} server env connected\")\n else:\n     dotenv_path = os.path.join(os.path.dirname(__file__), 'env_local') #this is local env\n+    print(current_os , \":local env connected\")\n load_dotenv(dotenv_path)\n \n # Quick-start development settings - unsuitable for production\n # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n@@ -89,8 +92,9 @@\n \n CORS_ORIGIN_ALLOW_ALL = True\n CORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\n CSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n+print(CSRF_TRUSTED_ORIGINS, \"\\n csrf\")\n \n MIDDLEWARE = [\n     'corsheaders.middleware.CorsMiddleware',\n     'django.middleware.common.CommonMiddleware',\n@@ -181,12 +185,9 @@\n     BASE_DIR / \"static\",\n ]\n STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\n MEDIA_ROOT = os.path.join(BASE_DIR,'media')\n-MEDIA_URL = 'media/'\n \n-\n-\n # Default primary key field type\n # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n \n DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n@@ -245,5 +246,5 @@\n     \"127.0.0.1\",\n     # ...\n ]\n \n-SMS_KEY_PASSWORD = ''\n\\ No newline at end of file\n+SMS_KEY_PASSWORD = ''\n"
                }
            ],
            "date": 1725173939253,
            "name": "Commit-0",
            "content": "\"\"\"\nDjango settings for cnex project.\n\nGenerated by 'django-admin startproject' using Django 4.2.5.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.2/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\nimport os\nfrom dotenv import load_dotenv\nimport platform\nserver_type = \"AWS\"#\"LOCAL\"\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\ncurrent_os = platform.system()\nprint(current_os, \" operatitng system\")\n\nif current_os == \"Linux\" and server_type == \"AWS\":\n    dotenv_path = os.path.join(os.path.dirname(__file__), '.env') #server env\n    print(current_os ,f\":{server_type} server env connected\")\nelse:\n    dotenv_path = os.path.join(os.path.dirname(__file__), 'env_local') #this is local env\n    print(current_os , \":local env connected\")\nload_dotenv(dotenv_path)\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('SECRET_KEY')\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [host for host in os.getenv('ALLOWED_HOSTS').split(',') if host != '']\n\n# Application definition\n\nINSTALLED_APPS = [\n    # 'daphne',\n    # 'admin_interface',\n    'colorfield',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'drf_yasg',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'django_filters',\n    'accounts',\n    'managements',\n    'destination',\n    'services',\n    'booking',\n    'payment',\n    'queries',\n    'review',\n    'dashboard',\n    'accountsmanagement',\n    'setupemail',\n    'collection',\n    'activities',\n    'faqs',\n    'departure',\n    'company',\n    'blog',\n    'airlines',\n    'gallery',\n    'report',\n]\n\n# ASGI_APPLICATION = 'trek.asgi.application'\nAUTH_USER_MODEL = 'accounts.CustomUser'\n\nCORS_ORIGIN_ALLOW_ALL = True\nCORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\nCSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n\n\nMIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'trek.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'trek.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': os.getenv('DATABASE_ENGINE'),\n        'NAME': os.getenv('DATABASES_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT'),\n    }\n}\n\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\nAUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n    # 'accounts.backend.EmailserBackend',\n]\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\nimport os\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')\nMEDIA_ROOT = os.path.join(BASE_DIR,'media')\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\n\nCORS_ORIGIN_ALLOW_ALL = True #if True then allow only for whitelist ip.(frontend request)\nCORS_ORIGIN_WHITELIST = [white for white in os.getenv('CORS_ORIGIN_WHITELIST').split(',') if white != '']\nCSRF_TRUSTED_ORIGINS = [trusted for trusted in os.getenv('CSRF_TRUSTED_ORIGINS').split(',') if trusted != '']\n\n\nfrom datetime import timedelta\n\n# SIMPLE_JWT = {\n#     \"ACCESS_TOKEN_LIFETIME\": timedelta(days=7),\n#     \"REFRESH_TOKEN_LIFETIME\": timedelta(days=7),\n#     \"ROTATE_REFRESH_TOKENS\": False,\n#     \"BLACKLIST_AFTER_ROTATION\": False,\n#     \"UPDATE_LAST_LOGIN\": False,\n\n#     \"USER_AUTHENTICATION_RULE\": \"rest_framework_simplejwt.authentication.default_user_authentication_rule\",\n# }\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.TokenAuthentication\",\n        \"rest_framework.authentication.BasicAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),\n    \"DEFAULT_FILTER_BACKENDS\": (\"django_filters.rest_framework.DjangoFilterBackend\",),\n    \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n    # \"MAX_PAGE_SIZE\": 1\n}\n\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=30),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=50),\n    \"ROTATE_REFRESH_TOKENS\": False,\n    \"BLACKLIST_AFTER_ROTATION\": False,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"AUTH_HEADER_TYPES\": (\"Bearer\", \"JWT\"),\n    # \"USER_ID_FIELD\": \"id\",\n    # \"USER_ID_CLAIM\": \"user_id\",\n    \"USER_AUTHENTICATION_RULE\": \"rest_framework_simplejwt.authentication.default_user_authentication_rule\",\n}\n\nEMAIL_USE_TLS = True\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_HOST_USER = 'manojdas.py@gmail.com'\nEMAIL_HOST_PASSWORD = 'qizi zhwj urhp vmvv'\n\n# EMAIL_BACKEND = 'setupemail.utilities.custom_email_setup_backend.CustomEmailBackend'\n\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n\nSMS_KEY_PASSWORD = ''"
        }
    ]
}