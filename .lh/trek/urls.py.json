{
    "sourceFile": "trek/urls.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1724907996693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1724907996693,
            "name": "Commit-0",
            "content": "\"\"\"\nURL configuration for cnex project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path,include\n\nfrom django.urls import re_path\nfrom rest_framework import permissions\nfrom drf_yasg.views import get_schema_view\nfrom drf_yasg import openapi\n\nfrom django.conf import settings\nfrom django.conf.urls.static import static\n\nfrom  rest_framework  import routers\n\nfrom accounts.urls import router as accounts_router\nfrom blog.urls import router as blog_router\nfrom destination.urls import router as destination_router\nfrom managements.urls import router as managements_router\nfrom payment.urls import router as payment_router\nfrom queries.urls import router as queries_router\nfrom services.urls import router as services_router\nfrom destination.routers.routers import router as destination_router\nfrom activities.routers.routers import router as activities_router\nfrom collection.routers.routers import router as collection_router\nfrom faqs.routers.routers import router as faqs_router\nfrom departure.routers.routers import router as departure_router\nfrom booking.routers.routers import router as booking_router\nfrom company.routers.routers import router as company_router\nfrom review.routers.routers import router as review_router\nfrom airlines.routers.routers import router as airlines_router\nfrom trek.utilities.bulk_upload import BulkUploadAPIView\nfrom gallery.routers.routers import router as gallery_router\n\nfrom trek.utilities.bulk_delete import BulkDelete\n\nrouter = routers.DefaultRouter()\n\nrouter.registry.extend(accounts_router.registry)\nrouter.registry.extend(blog_router.registry)\nrouter.registry.extend(destination_router.registry)\nrouter.registry.extend(managements_router.registry)\nrouter.registry.extend(payment_router.registry)\nrouter.registry.extend(queries_router.registry)\nrouter.registry.extend(services_router.registry)\nrouter.registry.extend(airlines_router.registry)\nrouter.registry.extend(departure_router.registry)\nrouter.registry.extend(review_router.registry)\nrouter.registry.extend(booking_router.registry)\nrouter.registry.extend(faqs_router.registry)\nrouter.registry.extend(collection_router.registry)\nrouter.registry.extend(activities_router.registry)\nrouter.registry.extend(company_router.registry)\nrouter.registry.extend(gallery_router.registry)\nrouter.registry.extend(gallery_router.registry)\n\n\nschema_view = get_schema_view(\n   openapi.Info(\n      title=\"Everest Thrill API\",\n      default_version='v1',\n      description=\"Everest Thrill Trekking System\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"manojdas.py@gmail.com\"),\n      license=openapi.License(name=\"No License\"),\n      **{'x-logo': {'url': 'your-logo-url'}},\n   ),\n   public=True,\n   permission_classes=[permissions.AllowAny],\n)\n\nurlpatterns = [\n    \n    path('admin/', admin.site.urls),\n    # path('', lambda request: HttpResponse(\"cdn storage fixing\"), name='index'),\n    path('api/',include(router.urls)),\n    path('api-auth/', include('rest_framework.urls')),\n    path('api/accounts/',include('accounts.urls')),\n    path('api/',include('blog.urls')),\n    path('api/',include('destination.urls')),\n    path('api/services/',include('services.urls')),\n    path('api/queries/',include('queries.urls')),\n    path('api/managements/',include('managements.urls')),\n    path('api/',include('accountsmanagement.urls')),\n    path('api/',include(collection_router.urls)),\n    path('api/',include(activities_router.urls)),\n    path('api/',include(destination_router.urls)),\n    path('api/',include(faqs_router.urls)),\n    path('api/bulk-delete/<str:delete_type>/',BulkDelete.as_view(),name=\"bulk_delete\"),\n    path('api/',include(departure_router.urls)),\n    path('api/',include(company_router.urls)),\n    path('api/',include(booking_router.urls)),\n    path('api/',include(review_router.urls)),\n    path('api/',include(airlines_router.urls)),\n    path('api/',include('dashboard.urls')),\n    path('api/report/',include('report.urls')),\n    \n    path('api/bulk-upload/', BulkUploadAPIView.as_view(), name='bulk-upload'),\n\n    #path('swagger<format>/', schema_view.without_ui(cache_timeout=0), name='schema-json'),\n    path('', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n"
        }
    ]
}