{
    "sourceFile": "booking/models.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 50,
            "patches": [
                {
                    "date": 1724847125107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724847187491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,12 @@\n         ('budget', 'Budget'),\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)user\n-     = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     country = models.CharField(max_length=45)\n+    user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n+    country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n"
                },
                {
                    "date": 1724847196270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    country = models.CharField(max_length=45)\n+    name = models.CharField(max_length=45)\n     user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n"
                },
                {
                    "date": 1724847206503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    name = models.CharField(max_length=45)\n+    full_name = models.CharField(max_length=45)\n     user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n"
                },
                {
                    "date": 1724847273728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45)\n+     email = models.EmailField()\n     user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n"
                },
                {
                    "date": 1724847334922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,10 @@\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45)\n-     email = models.EmailField()\n+    email = models.EmailField()\n+    full_name = models.CharField(max_length=45)\n     user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n"
                },
                {
                    "date": 1724847343626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45)\n     email = models.EmailField()\n-    full_name = models.CharField(max_length=45)\n-    user = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n+    phone = models.CharField(max_length=45)\n+    \n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n"
                },
                {
                    "date": 1724847365183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,9 @@\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45)\n     email = models.EmailField()\n-    phone = models.CharField(max_length=45)\n-    \n+     phone_number = models.CharField(max_length=15)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n"
                },
                {
                    "date": 1724847418861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,11 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    full_name = models.CharField(max_length=45)\n+    full_name = models.CharField(max_length=45,null=True)\n     email = models.EmailField()\n-     phone_number = models.CharField(max_length=15)\n+    phone_number = models.CharField(max_length=15)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n"
                },
                {
                    "date": 1724847424510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    full_name = models.CharField(max_length=45,null=True)\n+    full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField()\n     phone_number = models.CharField(max_length=15)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n"
                },
                {
                    "date": 1724847432372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n-    email = models.EmailField()\n+    email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n"
                },
                {
                    "date": 1724905165752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,17 +17,17 @@\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n-    phone_number = models.CharField(max_length=15)\n+    phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateTimeField()\n     departure_date = models.DateTimeField()\n-    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n+    service_type = models.CharField(max_length=20)\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n     customize_trip = models.CharField(max_length=450)\n \n \n"
                },
                {
                    "date": 1724905190907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateTimeField()\n     departure_date = models.DateTimeField()\n-    service_type = models.CharField(max_length=20)\n+    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n     customize_trip = models.CharField(max_length=450)\n \n \n"
                },
                {
                    "date": 1724993539305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450)\n+    airlines = models.CharField(max_length=450,null)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateTimeField()\n"
                },
                {
                    "date": 1724993546924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450,null)\n+    airlines = models.CharField(max_length=450,null=True,blank)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateTimeField()\n"
                },
                {
                    "date": 1724996069863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450,null=True,blank)\n+    airlines = models.CharField(max_length=450,null=True,blank=True)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateTimeField()\n@@ -34,9 +34,9 @@\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n-        return str(self.user.username) + \":\" + str(self.destination.title)\n+        return str(selffull_name) + \":\" + str(self.destination.title)\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1724996153850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n-        return str(selffull_name) + \":\" + str(self.destination.title)\n+        return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1725166622045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+from django.db import models\n+from accounts.models  import CustomUser\n+from destination.models import Destination\n+from services.models import Services\n+from activities.models import Activity\n+from destination.models import Package\n+from airlines.models import Airlines\n+import uuid\n+\n+# Create your models here.\n+\n+class DestinationBook(models.Model):\n+    SERVICE_TYPES = (\n+        ('budget', 'Budget'),\n+        ('standard', 'Standard'),\n+        ('premium','Premium'),\n+    )\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(unique=True, blank=True)\n+    full_name = models.CharField(max_length=45,null=True,blank=True)\n+    email = models.EmailField(null=True,blank=True)\n+    phone_number = models.CharField(max_length=15,null=True,blank=True)\n+    country = models.CharField(max_length=45)\n+    airlines = models.CharField(max_length=450,null=True,blank=True)\n+    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n+    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n+    arrival_date = models.DateTimeField()\n+    departure_date = models.DateTimeField()\n+    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n+    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n+    customize_trip = models.CharField(max_length=450)\n+\n+\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return str(self.full_name) + \":\" + str(self.destination.destination_title)\n+\n+\n+class ServiceBook(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n+    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n+\n+    is_price = models.BooleanField(default = False)\n+    price  =  models.PositiveIntegerField(default = 0)\n+\n+    desired_date = models.DateTimeField()\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return str(self.user.username) + \":\" + str(self.services.name)\n+    \n+    \n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725166664374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,65 +38,9 @@\n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n \n-class ServiceBook(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n-    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n \n-    is_price = models.BooleanField(default = False)\n-    price  =  models.PositiveIntegerField(default = 0)\n-\n-    desired_date = models.DateTimeField()\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return str(self.user.username) + \":\" + str(self.services.name)\n-    \n-    \n-    \n-from django.db import models\n-from accounts.models  import CustomUser\n-from destination.models import Destination\n-from services.models import Services\n-from activities.models import Activity\n-from destination.models import Package\n-from airlines.models import Airlines\n-import uuid\n-\n-# Create your models here.\n-\n-class DestinationBook(models.Model):\n-    SERVICE_TYPES = (\n-        ('budget', 'Budget'),\n-        ('standard', 'Standard'),\n-        ('premium','Premium'),\n-    )\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    full_name = models.CharField(max_length=45,null=True,blank=True)\n-    email = models.EmailField(null=True,blank=True)\n-    phone_number = models.CharField(max_length=15,null=True,blank=True)\n-    country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450,null=True,blank=True)\n-    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n-    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n-    arrival_date = models.DateTimeField()\n-    departure_date = models.DateTimeField()\n-    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n-    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n-    customize_trip = models.CharField(max_length=450)\n-\n-\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return str(self.full_name) + \":\" + str(self.destination.destination_title)\n-\n-\n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n     user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n     services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n"
                },
                {
                    "date": 1725166682142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,11 @@\n \n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1725166690892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n from activities.models import Activity\n from destination.models import Package\n from airlines.models import Airlines\n import uuid\n+import slugify\n \n # Create your models here.\n \n class DestinationBook(models.Model):\n"
                },
                {
                    "date": 1725168426410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,12 @@\n \n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n-    def save(self, *args, **kwargs):\n+     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-5:]\n+        super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1725168499132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n \n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n-     def save(self, *args, **kwargs):\n+    def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-5:]\n+            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725168507028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.destination_title) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725168543799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n from activities.models import Activity\n from destination.models import Package\n from airlines.models import Airlines\n import uuid\n-import slugify\n+from django.utils.text import slugify\n \n # Create your models here.\n \n class DestinationBook(models.Model):\n"
                },
                {
                    "date": 1725169265316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n+    # slug = models.SlugField(unique=True, blank=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725169274715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,12 @@\n \n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n-    def save(self, *args, **kwargs):\n-        if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-        super().save(*args, **kwargs)\n+    # def save(self, *args, **kwargs):\n+    #     if not self.slug:\n+    #         self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+    #     super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1725169288601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,12 @@\n \n     def __str__(self) -> str:\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n-    # def save(self, *args, **kwargs):\n-    #     if not self.slug:\n-    #         self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-    #     super().save(*args, **kwargs)\n+    def save(self, *args, **kwargs):\n+        if not self.slug:\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n"
                },
                {
                    "date": 1725169306571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    # slug = models.SlugField(unique=True, blank=True)\n+    slug = models.SlugField( blank=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725169312545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField( blank=True)\n+    slug = models.SlugField(null =blank=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725169678500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(null =blank=True)\n+    slug = models.SlugField(unique=True, blank=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725169688877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(unique=True, blank=True)\n+    slug = models.SlugField(unique=True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725170972212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         ('standard', 'Standard'),\n         ('premium','Premium'),\n     )\n     public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(unique=True)\n+    slug = models.SlugField(unique=True,blank = True)\n     full_name = models.CharField(max_length=45,null=True,blank=True)\n     email = models.EmailField(null=True,blank=True)\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n"
                },
                {
                    "date": 1725338812026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,7 +58,16 @@\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n         return str(self.user.username) + \":\" + str(self.services.name)\n+    def save(self, *args, **kwargs):\n+        # Remove special characters from full_name\n+        if self.full_name:\n+            self.full_name = re.sub(r'[^a-zA-Z0-9\\s]', '', self.full_name)\n+        \n+        # Generate slug if not already provided\n+        if not self.slug:\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        \n+        super().save(*args, **kwargs)\n     \n-    \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725338831451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         return str(self.full_name) + \":\" + str(self.destination.destination_title)\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n@@ -58,16 +58,7 @@\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n         return str(self.user.username) + \":\" + str(self.services.name)\n-    def save(self, *args, **kwargs):\n-        # Remove special characters from full_name\n-        if self.full_name:\n-            self.full_name = re.sub(r'[^a-zA-Z0-9\\s]', '', self.full_name)\n-        \n-        # Generate slug if not already provided\n-        if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-        \n-        super().save(*args, **kwargs)\n     \n+    \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725338859956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n-        return str(self.full_name) + \":\" + str(self.destination.destination_title)\n+        return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n \n     def save(self, *args, **kwargs):\n         if not self.slug:\n             self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n"
                },
                {
                    "date": 1725338866379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,17 @@\n \n     def __str__(self) -> str:\n         return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n \n-    def save(self, *args, **kwargs):\n+def save(self, *args, **kwargs):\n+        # Remove special characters from full_name\n+        if self.full_name:\n+            self.full_name = re.sub(r'[^a-zA-Z0-9\\s]', '', self.full_name)\n+        \n+        # Generate slug if not already provided\n         if not self.slug:\n-            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        \n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725338876660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,17 @@\n \n     def __str__(self) -> str:\n         return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n \n-def save(self, *args, **kwargs):\n+    def save(self, *args, **kwargs):\n         # Remove special characters from full_name\n         if self.full_name:\n             self.full_name = re.sub(r'[^a-zA-Z0-9\\s]', '', self.full_name)\n-        \n-        # Generate slug if not already provided\n+\n+            # Generate slug if not already provided\n         if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-        \n+            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+\n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725338890109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n from activities.models import Activity\n from destination.models import Package\n from airlines.models import Airlines\n import uuid\n+import re\n from django.utils.text import slugify\n \n # Create your models here.\n \n"
                },
                {
                    "date": 1725338898193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,8 @@\n     created_date = models.DateTimeField(auto_now_add=True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n-        return str(self.user.username) + \":\" + str(self.services.name)\n+        return f\"{str(self.user.username)}:{str(self.services.name)}\"\n     \n     \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725339553285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,17 +39,23 @@\n \n     def __str__(self) -> str:\n         return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n \n+    def clean(self):\n+        # Check for special characters in full_name\n+        if self.full_name and re.search(r'[^a-zA-Z0-9\\s]', self.full_name):\n+            raise ValidationError(\"Full name contains special characters, which are not allowed.\")\n+        super().clean()\n+\n     def save(self, *args, **kwargs):\n-        # Remove special characters from full_name\n-        if self.full_name:\n-            self.full_name = re.sub(r'[^a-zA-Z0-9\\s]', '', self.full_name)\n-\n-            # Generate slug if not already provided\n+        # Call clean method to validate the full_name before saving\n+        self.full_name = self.full_name.strip() if self.full_name else self.full_name\n+        self.clean()\n+        \n+        # Generate slug if not already provided\n         if not self.slug:\n-            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-\n+            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n+        \n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725339566837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n from airlines.models import Airlines\n import uuid\n import re\n from django.utils.text import slugify\n+from django.core.exceptions import ValidationError\n \n # Create your models here.\n \n class DestinationBook(models.Model):\n"
                },
                {
                    "date": 1725339574978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,13 @@\n     def save(self, *args, **kwargs):\n         # Call clean method to validate the full_name before saving\n         self.full_name = self.full_name.strip() if self.full_name else self.full_name\n         self.clean()\n-        \n+\n         # Generate slug if not already provided\n         if not self.slug:\n-            self.slug = slugify(self.full_name) + '-' + str(self.public_id)[1:5] + str(self.public_id)[-1:-5]\n-        \n+            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+\n         super().save(*args, **kwargs)\n \n \n class ServiceBook(models.Model):\n"
                },
                {
                    "date": 1725789894487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+from django.db import models\n+from accounts.models  import CustomUser\n+from destination.models import Destination\n+from services.models import Services\n+from activities.models import Activity\n+from destination.models import Package\n+from airlines.models import Airlines\n+import uuid\n+import re\n+from django.utils.text import slugify\n+from django.core.exceptions import ValidationError\n+\n+# Create your models here.\n+\n+class DestinationBook(models.Model):\n+    SERVICE_TYPES = (\n+        ('budget', 'Budget'),\n+        ('standard', 'Standard'),\n+        ('premium','Premium'),\n+    )\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(unique=True,blank = True)\n+    full_name = models.CharField(max_length=45,null=True,blank=True)\n+    email = models.EmailField(null=True,blank=True)\n+    phone_number = models.CharField(max_length=15,null=True,blank=True)\n+    country = models.CharField(max_length=45)\n+    airlines = models.CharField(max_length=450,null=True,blank=True)\n+    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n+    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n+    arrival_date = models.DateTimeField()\n+    departure_date = models.DateField()\n+    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n+    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n+    customize_trip = models.CharField(max_length=450)\n+\n+\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n+\n+    def clean(self):\n+        # Check for special characters in full_name\n+        if self.full_name and re.search(r'[^a-zA-Z0-9\\s]', self.full_name):\n+            raise ValidationError(\"Full name contains special characters, which are not allowed.\")\n+        super().clean()\n+\n+    def save(self, *args, **kwargs):\n+        # Call clean method to validate the full_name before saving\n+        self.full_name = self.full_name.strip() if self.full_name else self.full_name\n+        self.clean()\n+\n+        # Generate slug if not already provided\n+        if not self.slug:\n+            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+\n+        super().save(*args, **kwargs)\n+\n+\n+class ServiceBook(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n+    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n+\n+    is_price = models.BooleanField(default = False)\n+    price  =  models.PositiveIntegerField(default = 0)\n+\n+    desired_date = models.DateTimeField()\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return f\"{str(self.user.username)}:{str(self.services.name)}\"\n+    \n+    \n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725789900205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     airlines = models.CharField(max_length=450,null=True,blank=True)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n     activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n-    arrival_date = models.DateTimeField()\n+    arrival_date = models.DateField()\n     departure_date = models.DateField()\n     service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n     customize_trip = models.CharField(max_length=450)\n@@ -74,83 +74,5 @@\n     def __str__(self) -> str:\n         return f\"{str(self.user.username)}:{str(self.services.name)}\"\n     \n     \n-    \n-from django.db import models\n-from accounts.models  import CustomUser\n-from destination.models import Destination\n-from services.models import Services\n-from activities.models import Activity\n-from destination.models import Package\n-from airlines.models import Airlines\n-import uuid\n-import re\n-from django.utils.text import slugify\n-from django.core.exceptions import ValidationError\n-\n-# Create your models here.\n-\n-class DestinationBook(models.Model):\n-    SERVICE_TYPES = (\n-        ('budget', 'Budget'),\n-        ('standard', 'Standard'),\n-        ('premium','Premium'),\n-    )\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(unique=True,blank = True)\n-    full_name = models.CharField(max_length=45,null=True,blank=True)\n-    email = models.EmailField(null=True,blank=True)\n-    phone_number = models.CharField(max_length=15,null=True,blank=True)\n-    country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450,null=True,blank=True)\n-    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n-    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n-    arrival_date = models.DateTimeField()\n-    departure_date = models.DateTimeField()\n-    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n-    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n-    customize_trip = models.CharField(max_length=450)\n-\n-\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n-\n-    def clean(self):\n-        # Check for special characters in full_name\n-        if self.full_name and re.search(r'[^a-zA-Z0-9\\s]', self.full_name):\n-            raise ValidationError(\"Full name contains special characters, which are not allowed.\")\n-        super().clean()\n-\n-    def save(self, *args, **kwargs):\n-        # Call clean method to validate the full_name before saving\n-        self.full_name = self.full_name.strip() if self.full_name else self.full_name\n-        self.clean()\n-\n-        # Generate slug if not already provided\n-        if not self.slug:\n-            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-\n-        super().save(*args, **kwargs)\n-\n-\n-class ServiceBook(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n-    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n-\n-    is_price = models.BooleanField(default = False)\n-    price  =  models.PositiveIntegerField(default = 0)\n-\n-    desired_date = models.DateTimeField()\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return f\"{str(self.user.username)}:{str(self.services.name)}\"\n-    \n-    \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725789923744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,10 @@\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n     customize_trip = models.CharField(max_length=450)\n \n \n-    created_date = models.DateTimeField(auto_now_add=True)\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n     updated_date = models.DateTimeField(auto_now=True)\n \n     def __str__(self) -> str:\n         return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n"
                },
                {
                    "date": 1725794071052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+from django.db import models\n+from accounts.models  import CustomUser\n+from destination.models import Destination\n+from services.models import Services\n+from activities.models import Activity\n+from destination.models import Package\n+from airlines.models import Airlines\n+import uuid\n+import re\n+from django.utils.text import slugify\n+from django.core.exceptions import ValidationError\n+\n+# Create your models here.\n+\n+class DestinationBook(models.Model):\n+    SERVICE_TYPES = (\n+        ('budget', 'Budget'),\n+        ('standard', 'Standard'),\n+        ('premium','Premium'),\n+    )\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    slug = models.SlugField(unique=True,blank = True)\n+    full_name = models.CharField(max_length=45,null=True,blank=True)\n+    email = models.EmailField(null=True,blank=True)\n+    phone_number = models.CharField(max_length=15,null=True,blank=True)\n+    country = models.CharField(max_length=45)\n+    airlines = models.CharField(max_length=450,null=True,blank=True)\n+    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n+    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n+    arrival_date = models.DateField()\n+    departure_date = models.DateField()\n+    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n+    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n+    customize_trip = models.CharField(null=True,)\n+\n+\n+    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n+    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n+\n+    def clean(self):\n+        # Check for special characters in full_name\n+        if self.full_name and re.search(r'[^a-zA-Z0-9\\s]', self.full_name):\n+            raise ValidationError(\"Full name contains special characters, which are not allowed.\")\n+        super().clean()\n+\n+    def save(self, *args, **kwargs):\n+        # Call clean method to validate the full_name before saving\n+        self.full_name = self.full_name.strip() if self.full_name else self.full_name\n+        self.clean()\n+\n+        # Generate slug if not already provided\n+        if not self.slug:\n+            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n+\n+        super().save(*args, **kwargs)\n+\n+\n+class ServiceBook(models.Model):\n+    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n+    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n+    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n+\n+    is_price = models.BooleanField(default = False)\n+    price  =  models.PositiveIntegerField(default = 0)\n+\n+    desired_date = models.DateTimeField()\n+    created_date = models.DateTimeField(auto_now_add=True)\n+    updated_date = models.DateTimeField(auto_now=True)\n+\n+    def __str__(self) -> str:\n+        return f\"{str(self.user.username)}:{str(self.services.name)}\"\n+    \n+    \n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1725794076502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     arrival_date = models.DateField()\n     departure_date = models.DateField()\n     service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n-    customize_trip = models.CharField(null=True,)\n+    customize_trip = models.CharField(null=True,blank=True)\n \n \n     created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n     created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n@@ -75,84 +75,5 @@\n     def __str__(self) -> str:\n         return f\"{str(self.user.username)}:{str(self.services.name)}\"\n     \n     \n-    \n-from django.db import models\n-from accounts.models  import CustomUser\n-from destination.models import Destination\n-from services.models import Services\n-from activities.models import Activity\n-from destination.models import Package\n-from airlines.models import Airlines\n-import uuid\n-import re\n-from django.utils.text import slugify\n-from django.core.exceptions import ValidationError\n-\n-# Create your models here.\n-\n-class DestinationBook(models.Model):\n-    SERVICE_TYPES = (\n-        ('budget', 'Budget'),\n-        ('standard', 'Standard'),\n-        ('premium','Premium'),\n-    )\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    slug = models.SlugField(unique=True,blank = True)\n-    full_name = models.CharField(max_length=45,null=True,blank=True)\n-    email = models.EmailField(null=True,blank=True)\n-    phone_number = models.CharField(max_length=15,null=True,blank=True)\n-    country = models.CharField(max_length=45)\n-    airlines = models.CharField(max_length=450,null=True,blank=True)\n-    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n-    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n-    arrival_date = models.DateField()\n-    departure_date = models.DateField()\n-    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n-    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n-    customize_trip = models.CharField(max_length=450)\n-\n-\n-    created_date = models.DateField(auto_now_add=True, null = True,blank = True)\n-    created_date_time = models.DateTimeField(auto_now_add=True, null = True,blank = True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return f\"{str(self.full_name)}:{str(self.destination.destination_title)}\"\n-\n-    def clean(self):\n-        # Check for special characters in full_name\n-        if self.full_name and re.search(r'[^a-zA-Z0-9\\s]', self.full_name):\n-            raise ValidationError(\"Full name contains special characters, which are not allowed.\")\n-        super().clean()\n-\n-    def save(self, *args, **kwargs):\n-        # Call clean method to validate the full_name before saving\n-        self.full_name = self.full_name.strip() if self.full_name else self.full_name\n-        self.clean()\n-\n-        # Generate slug if not already provided\n-        if not self.slug:\n-            self.slug = f'{slugify(self.full_name)}-{str(self.public_id)[1:5]}{str(self.public_id)[-1:-5]}'\n-\n-        super().save(*args, **kwargs)\n-\n-\n-class ServiceBook(models.Model):\n-    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n-    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n-    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n-\n-    is_price = models.BooleanField(default = False)\n-    price  =  models.PositiveIntegerField(default = 0)\n-\n-    desired_date = models.DateTimeField()\n-    created_date = models.DateTimeField(auto_now_add=True)\n-    updated_date = models.DateTimeField(auto_now=True)\n-\n-    def __str__(self) -> str:\n-        return f\"{str(self.user.username)}:{str(self.services.name)}\"\n-    \n-    \n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1726489283028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450,null=True,blank=True)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE,)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateField()\n     departure_date = models.DateField()\n     service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n"
                },
                {
                    "date": 1726489289864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450,null=True,blank=True)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE,)\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE,null=True,blank=)\n     package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n     arrival_date = models.DateField()\n     departure_date = models.DateField()\n     service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n"
                },
                {
                    "date": 1726489296711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n     phone_number = models.CharField(max_length=15,null=True,blank=True)\n     country = models.CharField(max_length=45)\n     airlines = models.CharField(max_length=450,null=True,blank=True)\n     number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n-    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE,null=True,blank=)\n-    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n+    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE,null=True,blank=True)\n+    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADEnull=True,blank=True)\n     arrival_date = models.DateField()\n     departure_date = models.DateField()\n     service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n     destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n"
                }
            ],
            "date": 1724847125106,
            "name": "Commit-0",
            "content": "from django.db import models\nfrom accounts.models  import CustomUser\nfrom destination.models import Destination\nfrom services.models import Services\nfrom activities.models import Activity\nfrom destination.models import Package\nfrom airlines.models import Airlines\nimport uuid\n\n# Create your models here.\n\nclass DestinationBook(models.Model):\n    SERVICE_TYPES = (\n        ('budget', 'Budget'),\n        ('standard', 'Standard'),\n        ('premium','Premium'),\n    )\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)user\n     = models.ForeignKey(CustomUser,related_name = 'user_booking', on_delete  = models.CASCADE)\n    country = models.CharField(max_length=45)\n    airlines = models.CharField(max_length=450)\n    number_of_travelers = models.IntegerField(default = 1) #if group companions then specify numbers\n    activity = models.ForeignKey(Activity,related_name = 'activity_booking', on_delete = models.CASCADE)\n    package = models.ForeignKey(Package,related_name = 'package_booking', on_delete = models.CASCADE)\n    arrival_date = models.DateTimeField()\n    departure_date = models.DateTimeField()\n    service_type = models.CharField(max_length=20, choices=SERVICE_TYPES)\n    destination = models.ForeignKey(Destination,related_name = 'destination_book', on_delete = models.CASCADE)\n    customize_trip = models.CharField(max_length=450)\n\n\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n\n    def __str__(self) -> str:\n        return str(self.user.username) + \":\" + str(self.destination.title)\n\n\nclass ServiceBook(models.Model):\n    public_id = models.UUIDField(default=uuid.uuid4,editable=False,unique=True)\n    user = models.ForeignKey(CustomUser,related_name = 'service_book_user', on_delete  = models.CASCADE)\n    services = models.ForeignKey(Services,related_name = 'service_book_services', on_delete = models.CASCADE)\n\n    is_price = models.BooleanField(default = False)\n    price  =  models.PositiveIntegerField(default = 0)\n\n    desired_date = models.DateTimeField()\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n\n    def __str__(self) -> str:\n        return str(self.user.username) + \":\" + str(self.services.name)\n    \n    \n    "
        }
    ]
}