{
    "sourceFile": ".github/workflows/ci-cd.yml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1725257908537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725258050012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,11 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725262143432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,20 +33,20 @@\n     - name: Deploy to Lightsail\n       env:\n         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n+        AWS_DEFAULT_REGION: ap-south-1a\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: \"13.237.94.113\"\n+        SERVER_IP: 3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n@@ -64,11 +64,11 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725348576392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n@@ -68,7 +68,7 @@\n         ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725348589808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-south-1a\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n"
                },
                {
                    "date": 1725348609693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-south-1a\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n@@ -68,7 +68,7 @@\n         ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725348851278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n+        \n \n         # Create necessary directories on the server\n         echo \"Create necessary directories on the server\"\n         # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n@@ -64,9 +65,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n         ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n"
                },
                {
                    "date": 1725349705569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,75 +1,1 @@\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-\n-    - name: Install dependencies\n-      run: |\n-        pip install -r requirements.txt\n-\n-    - name: Run tests\n-      run: |\n-        python manage.py test\n-\n-    - name: Deploy to Lightsail\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-south-1a\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n-        PORT: \"8006\"\n-        SCREEN_NAME: \"evrest_thrill\"\n-        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n-\n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n-\n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-        \n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n-        \n-\n-        #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n-\n-#AmazonEC2FullAccess\n\\ No newline at end of file\n+https://www.useblackbox.io/editor?id=5f975da9-5224-4823-aafc-6ab6058f8500\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725349755975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+\n+    - name: Install dependencies\n+      run: |\n+        pip install -r requirements.txt\n+\n+    - name: Run tests\n+      run: |\n+        python manage.py test\n+\n+    - name: Deploy to Lightsail\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: 3.6.202.215 #\"13.237.94.113\"\n+        PORT: \"8006\"\n+        SCREEN_NAME: \"evrest_thrill\"\n+        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        \n+\n+        #echo \"Running deployment commands on the server\" &&\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725349769500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n@@ -70,6 +70,5 @@\n \n         #echo \"Running deployment commands on the server\" &&\n         # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n-#AmazonEC2FullAccess\n-https://www.useblackbox.io/editor?id=5f975da9-5224-4823-aafc-6ab6058f8500\n\\ No newline at end of file\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725349777616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+\n+    - name: Install dependencies\n+      run: |\n+        pip install -r requirements.txt\n+\n+    - name: Run tests\n+      run: |\n+        python manage.py test\n+\n+    - name: Deploy to Lightsail\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        PORT: \"8006\"\n+        SCREEN_NAME: \"evrest_thrill\"\n+        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        \n+\n+        #echo \"Running deployment commands on the server\" &&\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725349782828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,79 +70,5 @@\n \n         #echo \"Running deployment commands on the server\" &&\n         # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n-#AmazonEC2FullAccess\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-\n-    - name: Install dependencies\n-      run: |\n-        pip install -r requirements.txt\n-\n-    - name: Run tests\n-      run: |\n-        python manage.py test\n-\n-    - name: Deploy to Lightsail\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: #3.6.202.215 #\"13.237.94.113\"\n-        PORT: \"8006\"\n-        SCREEN_NAME: \"evrest_thrill\"\n-        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n-\n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n-\n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n-        \n-\n-        #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n-\n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725527496893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,7 +68,7 @@\n         ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725864368065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+name: CI/CD Pipeline\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+\n+jobs:\n+  build-and-deploy:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout code\n+      uses: actions/checkout@v2\n+\n+    - name: Set up Python\n+      uses: actions/setup-python@v2\n+      with:\n+        python-version: 3.10.12\n+\n+    - name: Upgrade pip and install setuptools\n+      run: |\n+        python -m pip install --upgrade pip==21.2.4\n+\n+    - name: Install dependencies\n+      run: |\n+        pip install -r requirements.txt\n+\n+    - name: Run tests\n+      run: |\n+        python manage.py test\n+\n+    - name: Deploy to Lightsail\n+      env:\n+        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+        AWS_DEFAULT_REGION: ap-southeast-2\n+        BACKEND_USER: backend\n+        BACKEND_PASSWORD: backend\n+        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n+        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        PORT: \"8006\"\n+        SCREEN_NAME: \"evrest_thrill\"\n+        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n+\n+      run: |\n+        mkdir -p ~/.ssh\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n+        chmod 600 ~/.ssh/id_rsa\n+\n+        # Install rsync\n+        #sudo apt-get install -y rsync\n+\n+        # Create necessary directories on the server\n+        echo \"Create necessary directories on the server\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n+\n+        # Use rsync to copy only changed files\n+        echo \"Use rsync to copy only changed files\"\n+        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        #copy and replace all files to cicd folder\n+        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n+\n+        # Run deployment commands on the server\n+        echo \"Running deployment commands on the server\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        \n+        \n+\n+        #echo \"Running deployment commands on the server\" &&\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+\n+#AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725864425104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,84 +66,10 @@\n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n         # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n-        \n \n-        #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n-#AmazonEC2FullAccess\n-name: CI/CD Pipeline\n-\n-on:\n-  push:\n-    branches:\n-      - main\n-\n-jobs:\n-  build-and-deploy:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-    - name: Checkout code\n-      uses: actions/checkout@v2\n-\n-    - name: Set up Python\n-      uses: actions/setup-python@v2\n-      with:\n-        python-version: 3.10.12\n-\n-    - name: Upgrade pip and install setuptools\n-      run: |\n-        python -m pip install --upgrade pip==21.2.4\n-\n-    - name: Install dependencies\n-      run: |\n-        pip install -r requirements.txt\n-\n-    - name: Run tests\n-      run: |\n-        python manage.py test\n-\n-    - name: Deploy to Lightsail\n-      env:\n-        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n-        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n-        AWS_DEFAULT_REGION: ap-southeast-2\n-        BACKEND_USER: backend\n-        BACKEND_PASSWORD: backend\n-        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n-        PORT: \"8006\"\n-        SCREEN_NAME: \"evrest_thrill\"\n-        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n-\n-      run: |\n-        mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n-        chmod 600 ~/.ssh/id_rsa\n-\n-        # Install rsync\n-        #sudo apt-get install -y rsync\n-\n-        # Create necessary directories on the server\n-        echo \"Create necessary directories on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n-\n-        # Use rsync to copy only changed files\n-        echo \"Use rsync to copy only changed files\"\n-        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        #copy and replace all files to cicd folder\n-        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n-\n-        # Run deployment commands on the server\n-        echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n-        \n-\n         #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726046980848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,12 +64,12 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726047073765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,12 +64,12 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726385529865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: #3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n@@ -64,9 +64,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n"
                },
                {
                    "date": 1726385539879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: #3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n"
                },
                {
                    "date": 1726385547280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: 13.237.94.1133.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n"
                },
                {
                    "date": 1726385571894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,16 +37,16 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 13.237.94.1133.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: 13.237.94.113 #3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n"
                },
                {
                    "date": 1726385583027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,7 +69,7 @@\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726385733270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n       run: |\n         mkdir -p ~/.ssh\n-        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n+        echo \"${{ secrets.SSH_PRIVATE_KEY_MAIN_2 }}\" > ~/.ssh/id_rsa\n         chmod 600 ~/.ssh/id_rsa\n \n         # Install rsync\n         #sudo apt-get install -y rsync\n@@ -69,7 +69,7 @@\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726385739021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         AWS_DEFAULT_REGION: ap-southeast-2\n         BACKEND_USER: backend\n         BACKEND_PASSWORD: backend\n         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n-        SERVER_IP: 13.237.94.113 #3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n+        SERVER_IP: 3.106.16.113 #3.6.202.215 #\"13.237.94.113\"\n         PORT: \"8006\"\n         SCREEN_NAME: \"evrest_thrill\"\n         PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n \n"
                },
                {
                    "date": 1726487288681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,7 +69,7 @@\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n-        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n+        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n \n #AmazonEC2FullAccess\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726487295832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n         #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n \n         # Run deployment commands on the server\n         echo \"Running deployment commands on the server\"\n-        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n+        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n         \n \n \n         #echo \"Running deployment commands on the server\" &&\n"
                }
            ],
            "date": 1725257908537,
            "name": "Commit-0",
            "content": "name: CI/CD Pipeline\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n\n    - name: Set up Python\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.10.12\n\n    - name: Upgrade pip and install setuptools\n      run: |\n        python -m pip install --upgrade pip==21.2.4\n\n    - name: Install dependencies\n      run: |\n        pip install -r requirements.txt\n\n    - name: Run tests\n      run: |\n        python manage.py test\n\n    - name: Deploy to Lightsail\n      env:\n        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        AWS_DEFAULT_REGION: ap-southeast-2\n        BACKEND_USER: backend\n        BACKEND_PASSWORD: backend\n        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}\n        SERVER_IP: \"13.237.94.113\"\n        PORT: \"8006\"\n        SCREEN_NAME: \"evrest_thrill\"\n        PROJECT_FOLDER: \"/home/ubuntu/evrest_thrill\"\n\n      run: |\n        mkdir -p ~/.ssh\n        echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\n        chmod 600 ~/.ssh/id_rsa\n\n        # Install rsync\n        #sudo apt-get install -y rsync\n\n        # Create necessary directories on the server\n        echo \"Create necessary directories on the server\"\n        # ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"sudo apt-get install -y python3-venv\"\n        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"mkdir -p $PROJECT_FOLDER\"\n\n        # Use rsync to copy only changed files\n        echo \"Use rsync to copy only changed files\"\n        rsync -avz --delete --exclude='__pycache__/' --exclude='venv/' --exclude='db.sqlite3' --exclude='env/' --exclude='staticfiles/' --exclude='media/' --exclude='.git/' -e \"ssh -o StrictHostKeyChecking=no\" ./ ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n\n        #copy and replace all files to cicd folder\n        #scp -r -o StrictHostKeyChecking=no ./* ubuntu@$SERVER_IP:$PROJECT_FOLDER/\n\n        # Run deployment commands on the server\n        echo \"Running deployment commands on the server\"\n        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput\"\n        \n\n        #echo \"Running deployment commands on the server\" &&\n        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \"cd $PROJECT_FOLDER && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput && screen -ls | grep $SCREEN_NAME | awk '{print $1}' | xargs -r -I{} screen -X -S {} quit && screen -dmS $SCREEN_NAME bash -c 'source venv/bin/activate && python manage.py runserver 0.0.0.0:$PORT'\"\n\n#AmazonEC2FullAccess"
        }
    ]
}