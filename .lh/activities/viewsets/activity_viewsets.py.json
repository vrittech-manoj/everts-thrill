{
    "sourceFile": "activities/viewsets/activity_viewsets.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1725791319020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725791330671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n from django_filters.rest_framework import DjangoFilterBackend\n from ..models import Activity\n from ..serializers.activity_serializers import ActivityListSerializers, ActivityRetrieveSerializers, ActivityWriteSerializers\n from ..utilities.importbase import *\n+from rest_framework.response import Response\n+from rest_framework import status\n \n class activityViewsets(viewsets.ModelViewSet):\n     serializer_class = ActivityListSerializers\n     # permission_classes = [activitiesPermission]\n@@ -31,9 +33,15 @@\n             return ActivityWriteSerializers\n         elif self.action == 'retrieve':\n             return ActivityRetrieveSerializers\n         return super().get_serializer_class()\n-    \n+    def destroy(self, request, *args, **kwargs):\n+        instance = self.get_object()\n+        self.perform_destroy(instance)\n+        \n+        return Response(\n+            {\"detail\": \"Item/s successfully deleted.\"}, \n+            status=status.HTTP_200_OK\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n"
                },
                {
                    "date": 1725791356511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n         \n         return Response(\n             {\"detail\": \"Item/s successfully deleted.\"}, \n             status=status.HTTP_200_OK\n+            \n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n"
                },
                {
                    "date": 1726656145580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     serializer_class = ActivityListSerializers\n     # permission_classes = [activitiesPermission]\n     authentication_classes = [JWTAuthentication]\n     pagination_class = MyPageNumberPagination\n-    queryset = Activity.objects.all().order_by(\"-name\")\n+    queryset = Activity.objects.all().order_by(\"name\")\n \n     filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n     search_fields = ['id','name']\n     ordering_fields = ['name']\n@@ -40,9 +40,9 @@\n         \n         return Response(\n             {\"detail\": \"Item/s successfully deleted.\"}, \n             status=status.HTTP_200_OK\n-            \n+        )\n \n     # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n     # def action_name(self, request, *args, **kwargs):\n     #     return super().list(request, *args, **kwargs)\n"
                }
            ],
            "date": 1725791319020,
            "name": "Commit-0",
            "content": "from rest_framework import viewsets\nfrom rest_framework.filters import SearchFilter, OrderingFilter\nfrom django_filters.rest_framework import DjangoFilterBackend\nfrom ..models import Activity\nfrom ..serializers.activity_serializers import ActivityListSerializers, ActivityRetrieveSerializers, ActivityWriteSerializers\nfrom ..utilities.importbase import *\n\nclass activityViewsets(viewsets.ModelViewSet):\n    serializer_class = ActivityListSerializers\n    # permission_classes = [activitiesPermission]\n    authentication_classes = [JWTAuthentication]\n    pagination_class = MyPageNumberPagination\n    queryset = Activity.objects.all().order_by(\"-name\")\n\n    filter_backends = [SearchFilter, DjangoFilterBackend, OrderingFilter]\n    search_fields = ['id','name']\n    ordering_fields = ['name']\n    ordering = ['name']  # Default ordering\n\n    filterset_fields = {\n        'id': ['exact'],\n        'name': ['exact'],\n    }\n\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        return queryset\n\n    def get_serializer_class(self):\n        if self.action in ['create', 'update', 'partial_update']:\n            return ActivityWriteSerializers\n        elif self.action == 'retrieve':\n            return ActivityRetrieveSerializers\n        return super().get_serializer_class()\n    \n\n    # @action(detail=False, methods=['get'], name=\"action_name\", url_path=\"url_path\")\n    # def action_name(self, request, *args, **kwargs):\n    #     return super().list(request, *args, **kwargs)\n\n"
        }
    ]
}